{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_NAME, GET_TYPES, ORDER_BY_NAME, FILTER_BY_ORIGIN, FILTER_BY_TYPE } from \"./actionsTypes\";\nconst initialState = {\n  allPokemons: [],\n  pokemonsCopy: [],\n  allTypes: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        // return copy state so we dont \"pisar\" the state\n        ...state,\n        allPokemons: action.payload,\n        pokemonsCopy: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        allTypes: action.payload\n      };\n    case GET_POKEMON_NAME:\n      return {\n        // return copy state so we dont \"pisar\" the state\n        ...state,\n        allPokemons: action.payload,\n        pokemonsCopy: action.payload\n      };\n    case ORDER_BY_NAME:\n      let copy1 = state.allPokemons;\n      if (action.payload === 'AA') {\n        return {\n          ...state,\n          allPokemons: copy1.sort((a, b) => {\n            if (a.name < b.name) return -1;\n            if (a.name > b.name) return 1;\n            return 0;\n          }).map(p => p)\n        };\n      } else {\n        return {\n          ...state,\n          allPokemons: copy1.sort((a, b) => {\n            if (a.name < b.name) return 1;\n            if (a.name > b.name) return -1;\n            return 0;\n          }).map(p => p)\n        };\n      }\n    case FILTER_BY_TYPE:\n      let filterType;\n      if (filterType === \"\") {\n        return {\n          ...state,\n          pokemonsCopy: state.allPokemons // Mostrar todos los Pokémon\n        };\n      }\n\n      if (action.payload === \"All\") {\n        filterType = state.pokemonsCopy;\n      } else {\n        filterType = state.pokemonsCopy.filter(event => event.types.includes(action.payload));\n      }\n      return {\n        ...state,\n        allPokemons: filterType\n      };\n    case FILTER_BY_ORIGIN:\n      if (action.payload === 'DB') {\n        return {\n          ...state,\n          allPokemones: state.pokemonesDB\n        };\n      }\n      if (action.payload === 'API') {\n        return {\n          ...state,\n          pokemones: state.pokemonesAPI\n        };\n      }\n      if (action.payload === 'ALL') {\n        return {\n          ...state,\n          pokemones: state.allPokemones\n        };\n      }\n      break;\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_NAME","GET_TYPES","ORDER_BY_NAME","FILTER_BY_ORIGIN","FILTER_BY_TYPE","initialState","allPokemons","pokemonsCopy","allTypes","rootReducer","state","action","type","payload","copy1","sort","a","b","name","map","p","filterType","filter","event","types","includes","allPokemones","pokemonesDB","pokemones","pokemonesAPI"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Redux/reducer.js"],"sourcesContent":["import { GET_POKEMONS, GET_POKEMON_NAME, GET_TYPES, ORDER_BY_NAME, FILTER_BY_ORIGIN, FILTER_BY_TYPE } from \"./actionsTypes\"\n\nconst initialState = {\n    allPokemons: [],\n    pokemonsCopy: [],\n    allTypes: []\n}\n\nconst rootReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_POKEMONS:\n            return {\n                // return copy state so we dont \"pisar\" the state\n                ...state,\n                allPokemons: action.payload,\n                pokemonsCopy: action.payload\n            }\n            case GET_TYPES:\n                return {\n                    ...state,\n                    allTypes: action.payload\n            }\n            case GET_POKEMON_NAME:\n                return {\n                    // return copy state so we dont \"pisar\" the state\n                    ...state,\n                    allPokemons: action.payload,\n                    pokemonsCopy: action.payload\n                }\n                    \n            case ORDER_BY_NAME:\n            let copy1 = state.allPokemons;\n            if (action.payload === 'AA') {\n                return {\n                    ...state, allPokemons: copy1.sort((a, b) => {\n                        if (a.name < b.name) return -1\n                        if (a.name > b.name) return 1\n                        return 0\n                    }).map(p => p)\n                }\n            } else {\n                return {\n                    ...state, allPokemons: copy1.sort((a, b) => {\n                        if (a.name < b.name) return 1\n                        if (a.name > b.name) return -1\n                        return 0\n                    }).map(p => p)\n                }\n            }\n            case FILTER_BY_TYPE:\n                let filterType;\n                if (filterType === \"\") {\n                    return {\n                      ...state,\n                      pokemonsCopy: state.allPokemons, // Mostrar todos los Pokémon\n                    };\n                  }\n                if (action.payload === \"All\") {\n                    filterType = state.pokemonsCopy;\n                } else {\n                    filterType = state.pokemonsCopy.filter((event) =>\n                    event.types.includes(action.payload)\n                    );\n                }\n                return {\n                    ...state,\n                    allPokemons: filterType,\n                }; \n\n            case FILTER_BY_ORIGIN:\n            if (action.payload === 'DB') {\n                return { ...state, allPokemones: state.pokemonesDB }\n            }\n            if (action.payload === 'API') {\n                return { ...state, pokemones: state.pokemonesAPI }\n            }\n            if (action.payload === 'ALL') {\n                return { ...state, pokemones: state.allPokemones }\n            }\n                break\n                default:\n                    return {...state}\n            }\n    }\n                \nexport default rootReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}