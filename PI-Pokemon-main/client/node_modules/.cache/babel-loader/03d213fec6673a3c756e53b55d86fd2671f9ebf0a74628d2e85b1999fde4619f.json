{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from '../../Components/NavBar/NavBar';\n// import { Link } from 'react-router-dom';\nimport React, { useEffect } from 'react';\n// import axios from 'axios';\nimport './HomePage.css';\n// import getColorForType from '../../utils/colors'\n// import Card from '../Card/Card';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemon } from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const dispatch = useDispatch();\n  // global state = component subscribed to global state\n  const allPokemons = useSelector(state => state.allPokemons);\n\n  // const [pokemons, setPokemons] = useState([]);\n  // console.log(pokemons);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [pokemonsPerPage] = useState(12);\n  // const [pokemonDetails, setPokemonDetails] = useState({});\n\n  useEffect(() => {\n    // when page render will send the action and modify the state\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n  //       setPokemons(data.results);\n\n  //       const detailsPromises = data.results.map(async (pokemon) => {\n  //         const { data: details } = await axios.get(pokemon.url);\n  //         return { [pokemon.name]: details };\n  //       });\n\n  //       const pokemonDetailsData = await Promise.all(detailsPromises);\n\n  //       const detailsObject = Object.assign({}, ...pokemonDetailsData);\n  //       setPokemonDetails(detailsObject);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  // }, []);\n\n  // const getPokemonImageURL = (pokemon) => {\n  //   const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n  //   return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  // };\n\n  // const paginate = (pageNumber) => {\n  //   setCurrentPage(pageNumber);\n  // };\n\n  // const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  // const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  // const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      allPokemons: allPokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"fKRvpCoCOrfILPVf/07UpdQTMmE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","React","useEffect","useDispatch","useSelector","getPokemon","Cards","jsxDEV","_jsxDEV","HomePage","_s","dispatch","allPokemons","state","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx"],"sourcesContent":["import NavBar from '../../Components/NavBar/NavBar';\n// import { Link } from 'react-router-dom';\nimport React, {useEffect } from 'react';\n// import axios from 'axios';\nimport './HomePage.css';\n// import getColorForType from '../../utils/colors'\n// import Card from '../Card/Card';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemon } from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\n\nconst HomePage = () => {\n  const dispatch = useDispatch()\n  // global state = component subscribed to global state\n  const allPokemons = useSelector(state => state.allPokemons)\n  \n  // const [pokemons, setPokemons] = useState([]);\n  // console.log(pokemons);\n  // const [currentPage, setCurrentPage] = useState(1);\n  // const [pokemonsPerPage] = useState(12);\n  // const [pokemonDetails, setPokemonDetails] = useState({});\n\n  useEffect(() => {\n    // when page render will send the action and modify the state\n    dispatch(getPokemon())\n  },[dispatch])\n\n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n  //       setPokemons(data.results);\n\n  //       const detailsPromises = data.results.map(async (pokemon) => {\n  //         const { data: details } = await axios.get(pokemon.url);\n  //         return { [pokemon.name]: details };\n  //       });\n\n  //       const pokemonDetailsData = await Promise.all(detailsPromises);\n\n  //       const detailsObject = Object.assign({}, ...pokemonDetailsData);\n  //       setPokemonDetails(detailsObject);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  // }, []);\n\n  // const getPokemonImageURL = (pokemon) => {\n  //   const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n  //   return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  // };\n\n\n  // const paginate = (pageNumber) => {\n  //   setCurrentPage(pageNumber);\n  // };\n\n  // const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  // const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  // const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  return (\n    <div>\n      <NavBar />\n      <Cards allPokemons={allPokemons} />\n      {/* <div className=\"home_general\">\n        <div className=\"title_landing\"></div>\n        <div className=\"home_cards\">\n          {currentPokemons.map((pokemon) => (\n            <div className=\"article\" key={pokemon.name}>\n              <Link to={`/${pokemon.name}`} className=\"detail_links\">\n                <img\n                  className=\"pokemon_image\"\n                  src={getPokemonImageURL(pokemon)}\n                  alt={pokemon.name}\n                />\n                <h2>{pokemon.name}</h2>\n                {pokemonDetails[pokemon.name] && (\n                  <p>\n                    {\n                    pokemonDetails[pokemon.name].types.map((type) => (\n                    <span className='types' key={type.type.name} style={{ backgroundColor: getColorForType(type.type.name) }}>\n                      {type.type.name}\n                    </span>\n                  ))\n                  }\n                  </p>\n                )}\n              </Link>\n            </div>\n          ))}\n          <div className=\"pagination-container\">\n            {Array.from({\n              length: Math.ceil(pokemons.length / pokemonsPerPage),\n            }).map((_, index) => (\n              <button\n                key={index}\n                onClick={() => paginate(index + 1)}\n                className={`pagination-button ${\n                  index + 1 === currentPage ? \"active\" : \"\"\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default HomePage;"],"mappings":";;AAAA,OAAOA,MAAM,MAAM,gCAAgC;AACnD;AACA,OAAOC,KAAK,IAAGC,SAAS,QAAQ,OAAO;AACvC;AACA,OAAO,gBAAgB;AACvB;AACA;;AAEA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,qBAAqB;AAChD,OAAOC,KAAK,MAAM,8BAA8B;AAChD;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B;EACA,MAAMS,WAAW,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,WAAW,CAAC;;EAE3D;EACA;EACA;EACA;EACA;;EAEAV,SAAS,CAAC,MAAM;IACd;IACAS,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAC,CAACM,QAAQ,CAAC,CAAC;;EAEb;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACEH,OAAA;IAAAM,QAAA,gBACEN,OAAA,CAACR,MAAM;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVV,OAAA,CAACF,KAAK;MAACM,WAAW,EAAEA;IAAY;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA4ChC,CAAC;AAEV,CAAC;AAACR,EAAA,CArGID,QAAQ;EAAA,QACKN,WAAW,EAERC,WAAW;AAAA;AAAAe,EAAA,GAH3BV,QAAQ;AAuGd,eAAeA,QAAQ;AAAC,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}