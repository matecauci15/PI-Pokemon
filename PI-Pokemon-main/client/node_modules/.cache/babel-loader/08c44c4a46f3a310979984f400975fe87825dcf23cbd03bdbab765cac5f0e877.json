{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\n// import Footer from '../Footer/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nconst HomePage = () => {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [pokeType, setPokeType] = useState([]);\n  console.log(pokeType);\n  // two states first for the current page, set to 1. Second set pokemon per page to 12.\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${URL}`);\n        setPokemons(data.results);\n      } catch (error) {\n        console.error(\"Error fetching pokemons:\", error);\n      }\n    };\n    fetchPokemons();\n    //UseEffect runs when component updates or didmount so\n    // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n  }, []);\n  const URL_ID = `https://pokeapi.co/api/v2/pokemon/${pokemons.id}`;\n  useEffect(() => {\n    const fetchTypes = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(`${URL_ID}`);\n        setPokeType(data.results);\n      } catch (error) {\n        console.error(\"Error fetching pokemons:\", error);\n      }\n    };\n    fetchTypes();\n    //UseEffect runs when component updates or didmount so\n    // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n  }, []);\n\n  //   const truncer = (string, n) => {\n  //         return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n  //       };\n\n  // Get current pokemons\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const getPokemonImageURL = pokemon => {\n    // Construir la URL de la imagen usando el ID del Pokémon.\n    // Esta function toma un objeto Pokémon de la lista y extrae su ID de la URL \n    // para construir la URL de la imagen adecuada. Esto debería mostrar las imágenes \n    // de los Pokémon en tu página de inicio.\n    const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_landing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_cards\",\n        children: [currentPokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${pokemon.name}`,\n            className: \"detail_links\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pokemon_image\",\n              src: getPokemonImageURL(pokemon),\n              alt: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), pokemon.types && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Types: \", pokemon.types.map(type => type.type.name).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }, this)]\n          }, pokemon.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, pokemon.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: Array.from({\n            length: Math.ceil(pokemons.length / pokemonsPerPage)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(index + 1),\n            className: `pagination-button ${index + 1 === currentPage ? \"active\" : \"\"}`,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"rmlY1ml3jvViqwbSG/LZV6HVLsA=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","Link","React","useState","useEffect","axios","jsxDEV","_jsxDEV","URL","HomePage","_s","pokemons","setPokemons","pokeType","setPokeType","console","log","currentPage","setCurrentPage","pokemonsPerPage","fetchPokemons","data","get","results","error","URL_ID","id","fetchTypes","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginate","pageNumber","getPokemonImageURL","pokemon","pokemonId","url","split","filter","Boolean","pop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","to","name","src","alt","types","type","join","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx"],"sourcesContent":["import NavBar from '../NavBar/NavBar'\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\n// import Footer from '../Footer/Footer';\n\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nconst HomePage = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [pokeType, setPokeType] = useState([])\n  console.log(pokeType);\n  // two states first for the current page, set to 1. Second set pokemon per page to 12.\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  \n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const { data } = await axios.get(`${URL}`);\n        \n        setPokemons(data.results);\n      } catch (error) {\n        console.error(\"Error fetching pokemons:\", error);\n      }\n    };\n    fetchPokemons();\n    //UseEffect runs when component updates or didmount so\n    // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n  }, []);\n  const URL_ID = `https://pokeapi.co/api/v2/pokemon/${pokemons.id}`;\n\n  useEffect(() => {\n      const fetchTypes = async () => {\n          try {\n              const { data } = await axios.get(`${URL_ID}`);\n\n              setPokeType(data.results);\n            } catch (error) {\n                console.error(\"Error fetching pokemons:\", error);\n            }\n        };\n        fetchTypes();\n        //UseEffect runs when component updates or didmount so\n        // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n    }, []);\n    \n    //   const truncer = (string, n) => {\n    //         return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n    //       };\n        \n        // Get current pokemons\n          const indexOfLastPokemon = currentPage * pokemonsPerPage;\n          const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n          const currentPokemons = pokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n        \n    const paginate = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    const getPokemonImageURL = (pokemon) => {\n            // Construir la URL de la imagen usando el ID del Pokémon.\n            // Esta function toma un objeto Pokémon de la lista y extrae su ID de la URL \n            // para construir la URL de la imagen adecuada. Esto debería mostrar las imágenes \n            // de los Pokémon en tu página de inicio.\n            const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n            return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n    };           \n\n    return (\n        <div>\n        <NavBar />\n\n      <div className=\"home_general\">\n\n        <div className=\"title_landing\">\n        </div>\n        {\n            <div className=\"home_cards\">\n            {currentPokemons.map((pokemon) => (\n              <div className=\"article\" key={pokemon.id}>\n                <Link\n                  to={`/${pokemon.name}`}\n                  className=\"detail_links\"\n                  key={pokemon.id}\n                  >\n                  <img\n                    className=\"pokemon_image\"\n                    src={getPokemonImageURL(pokemon)}\n                    alt={pokemon.name}\n                    />\n                  <h2>{pokemon.name}</h2>\n                  {pokemon.types && (\n          <p>Types: {pokemon.types.map((type) => type.type.name).join(\", \")}</p>\n        )}\n                </Link>\n              </div>\n            ))}\n\n\n            <div className=\"pagination-container\">\n              {Array.from({\n                  length: Math.ceil(pokemons.length / pokemonsPerPage),\n                }).map((_, index) => (\n                    <button\n                    key={index}\n                    onClick={() => paginate(index + 1)}\n                    className={`pagination-button ${\n                        index + 1 === currentPage ? \"active\" : \"\"\n                    }`}\n                    >\n                  {index + 1}\n                </button>\n              ))}\n            </div>\n          </div>\n        }\n        {/* <Footer /> */}\n      </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}