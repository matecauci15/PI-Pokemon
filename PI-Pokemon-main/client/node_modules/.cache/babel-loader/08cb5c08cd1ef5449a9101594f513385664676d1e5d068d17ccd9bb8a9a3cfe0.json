{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const [pokemon, setPokemon] = useState(null);\n  const {\n    name\n  } = useParams();\n  console.log(pokemon === null || pokemon === void 0 ? void 0 : pokemon.types);\n  useEffect(() => {\n    const fetchSinglePokemonData = async () => {\n      try {\n        const {\n          data\n        } = await axios(`https://pokeapi.co/api/v2/pokemon/${name}`);\n        setPokemon(data);\n      } catch (error) {\n        return error;\n      }\n    };\n    fetchSinglePokemonData();\n  }, [name]);\n  // const [pokemons, setPokemons] = useState([]);\n  // two states first for the current page, set to 1. Second set pokemon per page to 12.\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n\n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n\n  //       setPokemons(data.results);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  //   //UseEffect runs when component updates or didmount so\n  //   // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n  // }, []);\n\n  //   const truncer = (string, n) => {\n  //         return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n  //       };\n\n  // Get current pokemons\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemon.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const getPokemonImageURL = pokemons => {\n    // Construir la URL de la imagen usando el ID del Pokémon.\n    // Esta function toma un objeto Pokémon de la lista y extrae su ID de la URL \n    // para construir la URL de la imagen adecuada. Esto debería mostrar las imágenes \n    // de los Pokémon en tu página de inicio.\n    const pokemonId = pokemons.url.split('/').filter(Boolean).pop();\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_landing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_cards\",\n        children: [currentPokemons.map(pokemons => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${pokemons.name}`,\n            className: \"detail_links\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pokemon_image\",\n              src: getPokemonImageURL(pokemons),\n              alt: pokemons.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }, this), pokemon.types && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Types: \", pokemon.types.map(type => type.type.name).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 11\n            }, this)]\n          }, pokemons.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 17\n          }, this)\n        }, pokemons.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: Array.from({\n            length: Math.ceil(pokemon.length / pokemonsPerPage)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(index + 1),\n            className: `pagination-button ${index + 1 === currentPage ? \"active\" : \"\"}`,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(HomePage, \"N3YGbi+rEdLvxn6nHkB0dRx+cXs=\", true);\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","Link","React","useState","useEffect","axios","jsxDEV","_jsxDEV","HomePage","_s","pokemon","setPokemon","name","useParams","console","log","types","fetchSinglePokemonData","data","error","currentPage","setCurrentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","paginate","pageNumber","getPokemonImageURL","pokemons","pokemonId","url","split","filter","Boolean","pop","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","to","src","alt","type","join","id","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx"],"sourcesContent":["import NavBar from '../NavBar/NavBar'\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\n\nconst HomePage = () => {\n  const [pokemon, setPokemon] = useState(null);\n  const { name } = useParams();\n  console.log(pokemon?.types);\n  \n  useEffect(() => {\n      const fetchSinglePokemonData = async () => {\n          try {\n              const { data } = await axios(`https://pokeapi.co/api/v2/pokemon/${name}`);\n              setPokemon(data);\n          } catch (error) {\n              return error\n          }\n      }\n      \n      fetchSinglePokemonData();\n  }, [name]);\n  // const [pokemons, setPokemons] = useState([]);\n  // two states first for the current page, set to 1. Second set pokemon per page to 12.\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  \n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n        \n  //       setPokemons(data.results);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  //   //UseEffect runs when component updates or didmount so\n  //   // Empty array for stopping out the effect. If I want to run when some specific change you can use dependencies\n  // }, []);\n\n    \n    //   const truncer = (string, n) => {\n    //         return string?.length > n ? string.substr(0, n - 1) + '...' : string;\n    //       };\n        \n        // Get current pokemons\n          const indexOfLastPokemon = currentPage * pokemonsPerPage;\n          const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n          const currentPokemons = pokemon.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n        \n    const paginate = (pageNumber) => {\n        setCurrentPage(pageNumber);\n    };\n\n    const getPokemonImageURL = (pokemons) => {\n            // Construir la URL de la imagen usando el ID del Pokémon.\n            // Esta function toma un objeto Pokémon de la lista y extrae su ID de la URL \n            // para construir la URL de la imagen adecuada. Esto debería mostrar las imágenes \n            // de los Pokémon en tu página de inicio.\n            const pokemonId = pokemons.url.split('/').filter(Boolean).pop();\n            return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n    };           \n\n    return (\n        <div>\n        <NavBar />\n\n      <div className=\"home_general\">\n\n        <div className=\"title_landing\">\n        </div>\n        {\n            <div className=\"home_cards\">\n            {currentPokemons.map((pokemons) => (\n              <div className=\"article\" key={pokemons.id}>\n                <Link\n                  to={`/${pokemons.name}`}\n                  className=\"detail_links\"\n                  key={pokemons.id}\n                  >\n                  <img\n                    className=\"pokemon_image\"\n                    src={getPokemonImageURL(pokemons)}\n                    alt={pokemons.name}\n                    />\n                  <h2>{pokemon.name}</h2>\n                  {pokemon.types && (\n          <p>Types: {pokemon.types.map((type) => type.type.name).join(\", \")}</p>\n        )}\n                </Link>\n              </div>\n            ))}\n\n\n            <div className=\"pagination-container\">\n              {Array.from({\n                  length: Math.ceil(pokemon.length / pokemonsPerPage),\n                }).map((_, index) => (\n                    <button\n                    key={index}\n                    onClick={() => paginate(index + 1)}\n                    className={`pagination-button ${\n                        index + 1 === currentPage ? \"active\" : \"\"\n                    }`}\n                    >\n                  {index + 1}\n                </button>\n              ))}\n            </div>\n          </div>\n        }\n        {/* <Footer /> */}\n      </div>\n        </div>\n    );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}