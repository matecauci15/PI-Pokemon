{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nconst HomePage = () => {\n  _s();\n  const [pokemons, setPokemons] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const [pokemonDetails, setPokemonDetails] = useState({}); // Nuevo estado para los detalles de los Pokémon\n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const {\n          data\n        } = await axios.get(URL);\n        setPokemons(data.results);\n\n        // Obtener los detalles de cada Pokémon, incluidos los tipos\n        const detailsPromises = data.results.map(async pokemon => {\n          const {\n            data: details\n          } = await axios.get(pokemon.url);\n          return {\n            [pokemon.name]: details\n          };\n        });\n\n        // Esperar a que todas las promesas se resuelvan\n        const pokemonDetailsData = await Promise.all(detailsPromises);\n\n        // Unir los detalles de los Pokémon en un solo objeto\n        const detailsObject = Object.assign({}, ...pokemonDetailsData);\n\n        // Actualizar el estado con los detalles de los Pokémon\n        setPokemonDetails(detailsObject);\n      } catch (error) {\n        console.error(\"Error fetching pokemons:\", error);\n      }\n    };\n  }, []);\n  const getPokemonImageURL = pokemon => {\n    const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  };\n  const loadPokemonDetails = async pokemon => {\n    try {\n      const {\n        data\n      } = await axios.get(pokemon.url);\n      console.log(\"Types:\", data.types.map(type => type.type.name).join(\", \"));\n    } catch (error) {\n      console.error(\"Error fetching pokemon details:\", error);\n    }\n  };\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_landing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_cards\",\n        children: [currentPokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${pokemon.name}`,\n            className: \"detail_links\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pokemon_image\",\n              src: getPokemonImageURL(pokemon),\n              alt: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 7\n            }, this), pokemonDetails[pokemon.name] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Types: \", pokemonDetails[pokemon.name].types.map(type => type.type.name).join(\", \")]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 5\n          }, this)\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 3\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: Array.from({\n            length: Math.ceil(pokemons.length / pokemonsPerPage)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(index + 1),\n            className: `pagination-button ${index + 1 === currentPage ? \"active\" : \"\"}`,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"9/yQxhFrTGNmgsqFCeSAV9NR7UI=\");\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","Link","React","useState","useEffect","axios","jsxDEV","_jsxDEV","URL","HomePage","_s","pokemons","setPokemons","currentPage","setCurrentPage","pokemonsPerPage","pokemonDetails","setPokemonDetails","fetchPokemons","data","get","results","detailsPromises","map","pokemon","details","url","name","pokemonDetailsData","Promise","all","detailsObject","Object","assign","error","console","getPokemonImageURL","pokemonId","split","filter","Boolean","pop","loadPokemonDetails","log","types","type","join","paginate","pageNumber","children","fileName","_jsxFileName","lineNumber","columnNumber","className","currentPokemons","to","src","alt","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx"],"sourcesContent":["import NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './HomePage.css';\n\nconst URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\n\nconst HomePage = () => {\n  const [pokemons, setPokemons] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const [pokemonDetails, setPokemonDetails] = useState({}); // Nuevo estado para los detalles de los Pokémon\n  \n\n  useEffect(() => {\n    const fetchPokemons = async () => {\n      try {\n        const { data } = await axios.get(URL);\n        setPokemons(data.results);\n    \n        // Obtener los detalles de cada Pokémon, incluidos los tipos\n        const detailsPromises = data.results.map(async (pokemon) => {\n          const { data: details } = await axios.get(pokemon.url);\n          return { [pokemon.name]: details };\n        });\n    \n        // Esperar a que todas las promesas se resuelvan\n        const pokemonDetailsData = await Promise.all(detailsPromises);\n    \n        // Unir los detalles de los Pokémon en un solo objeto\n        const detailsObject = Object.assign({}, ...pokemonDetailsData);\n    \n        // Actualizar el estado con los detalles de los Pokémon\n        setPokemonDetails(detailsObject);\n      } catch (error) {\n        console.error(\"Error fetching pokemons:\", error);\n      }\n    };\n    \n  }, []);\n\n  const getPokemonImageURL = (pokemon) => {\n    const pokemonId = pokemon.url.split('/').filter(Boolean).pop();\n    return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  };\n\n  const loadPokemonDetails = async (pokemon) => {\n    try {\n      const { data } = await axios.get(pokemon.url);\n      console.log(\"Types:\", data.types.map((type) => type.type.name).join(\", \"));\n    } catch (error) {\n      console.error(\"Error fetching pokemon details:\", error);\n    }\n  };\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"home_general\">\n        <div className=\"title_landing\"></div>\n        <div className=\"home_cards\">\n        {currentPokemons.map((pokemon) => (\n  <div className=\"article\" key={pokemon.name}>\n    <Link to={`/${pokemon.name}`} className=\"detail_links\">\n      <img\n        className=\"pokemon_image\"\n        src={getPokemonImageURL(pokemon)}\n        alt={pokemon.name}\n      />\n      <h2>{pokemon.name}</h2>\n      {pokemonDetails[pokemon.name] && (\n        <p>Types: {pokemonDetails[pokemon.name].types.map((type) => type.type.name).join(\", \")}</p>\n      )}\n    </Link>\n  </div>\n))}\n\n          <div className=\"pagination-container\">\n            {Array.from({\n              length: Math.ceil(pokemons.length / pokemonsPerPage),\n            }).map((_, index) => (\n              <button\n                key={index}\n                onClick={() => paginate(index + 1)}\n                className={`pagination-button ${\n                  index + 1 === currentPage ? \"active\" : \"\"\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}