{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\n// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// // import './HomePage.css';\n// import styles from './HomePage.module.css';\n// // import getColorForType from '../../utils/colors'\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de Pokémon ordenada\n//   console.log(pokemonsCopy);\n//   const allTypes = useSelector(state => state.allTypes)\n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n//   // const [searchId, setSearchId] = useState(\"\");\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // Establece el valor de búsqueda en una cadena vacía\n//     dispatch(getPokemon(allPokemons)); // Muestra todos los Pokémon\n//   }\n\n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n\n//   // Función para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const order = event.target.value; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(order)); // Llama a la acción para ordenar los Pokémons\n//   };\n\n//   // Filtrado por ORIGEN \n//   const handleOrigin = (event) =>{\n//     event.preventDefault();\n//     const origin = event.target.event\n//     dispatch(filterByOrigin(origin));\n//   };\n\n//   // Filtrado por TYPE\n//   const [selectedType, setSelectedType] = useState(\"\"); // Estado para almacenar el tipo seleccionado\n\n//   const handleTypeChange = (event) => {\n//     const type = event.target.value;\n//     setSelectedType(type); // Actualiza el tipo seleccionado en el estado local\n//     dispatch(filterByType(type)); // Llama a la acción para filtrar los Pokémon por tipo\n//   };\n\n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }else if(event.target.name === \"order\"){\n//       dispatch(getPokemon(allPokemons))\n//     }\n//   }\n\n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n\n//   const paginate = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n//   const nextHandler = () => {\n//     // verificamos si estámos en la última página, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // Validación para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">All pokemon</option>\n//         <option value=\"AA\">(A-Z)</option>\n//         <option value=\"ZA\">(Z-A)</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} value={selectedType}>\n//         <option  value=\"All\">All pokemon</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOrigin(event)}>\n//               <option value=\"All\">All pokemon</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\n\nimport NavBar from '../../Components/NavBar/NavBar';\nimport React, { useEffect, useState } from 'react';\nimport styles from './HomePage.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const pokemonsCopy = useSelector(state => state.pokemonsCopy); // Copia de la lista de Pokémon ordenada\n  const allPokemons = useSelector(state => state.allPokemons);\n  const allTypes = useSelector(state => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n  function handleChange(event) {\n    event.preventDefault();\n    setSearchPokemon(event.target.value);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchPokemon) {\n      dispatch(getPokemonByName(searchPokemon));\n    } else {\n      dispatch(getPokemon());\n    }\n  }\n  function handleClearSearch() {\n    setSearchPokemon('');\n    dispatch(getPokemon());\n  }\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n  const handleOrderChange = event => {\n    event.preventDefault();\n    const order = event.target.value;\n    dispatch(orderByName(order));\n  };\n  const handleOrigin = event => {\n    event.preventDefault();\n    const origin = event.target.event;\n    dispatch(filterByOrigin(origin));\n  };\n  const [selectedType, setSelectedType] = useState(''); // Estado para almacenar el tipo seleccionado\n\n  const handleTypeChange = event => {\n    const type = event.target.value;\n    setSelectedType(type);\n    dispatch(filterByType(type));\n  };\n  const handleClearFilters = event => {\n    const filterValue = event.target.value;\n    if (filterValue === 'All') {\n      dispatch(getPokemon()); // Cargar los Pokémon originales\n    }\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const nextHandler = () => {\n    if (indexOfFirstPokemon + pokemonsPerPage >= pokemonsCopy.length) {\n      return;\n    }\n    if (indexOfFirstPokemon >= pokemonsCopy.length) return;\n    setCurrentPage(currentPage + 1);\n  };\n  const prevHandler = () => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  };\n\n  // Paginado\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemonsCopy.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  useEffect(() => {\n    if (currentPokemons.length === 0) setCurrentPage(1);\n  }, [currentPokemons]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        handleChange: handleChange,\n        handleSubmit: handleSubmit,\n        handleClearSearch: handleClearSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.filters,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.filter_types,\n          onChange: handleOrderChange,\n          name: \"order\",\n          value: \"All\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AA\",\n            children: \"(A-Z)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ZA\",\n            children: \"(Z-A)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.filter_types,\n          onChange: handleTypeChange,\n          name: \"types\",\n          value: \"All\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), allTypes === null || allTypes === void 0 ? void 0 : allTypes.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo,\n            children: tipo\n          }, tipo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 36\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          className: styles.filter_types,\n          name: \"origen\",\n          value: \"All\",\n          onChange: event => handleOrigin(event),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"All pokemon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created\",\n            children: \"DB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.home_cards,\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        allPokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination_container,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: prevHandler,\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        children: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: nextHandler,\n        disabled: indexOfFirstPokemon + pokemonsPerPage >= pokemonsCopy.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"M58M/aVZandz8ABg9t1qwL3WIqA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","React","useEffect","useState","styles","useDispatch","useSelector","filterByOrigin","filterByType","getPokemon","getPokemonByName","getTypes","orderByName","Cards","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","dispatch","pokemonsCopy","state","allPokemons","allTypes","searchPokemon","setSearchPokemon","handleChange","event","preventDefault","target","value","handleSubmit","handleClearSearch","handleOrderChange","order","handleOrigin","origin","selectedType","setSelectedType","handleTypeChange","type","handleClearFilters","filterValue","currentPage","setCurrentPage","pokemonsPerPage","nextHandler","indexOfFirstPokemon","length","prevHandler","paginate","pageNumber","indexOfLastPokemon","currentPokemons","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","filters","filter_types","onChange","name","map","tipo","home_cards","pagination_container","pagination_button","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx"],"sourcesContent":["// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// // import './HomePage.css';\n// import styles from './HomePage.module.css';\n// // import getColorForType from '../../utils/colors'\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de Pokémon ordenada\n//   console.log(pokemonsCopy);\n//   const allTypes = useSelector(state => state.allTypes)\n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n//   // const [searchId, setSearchId] = useState(\"\");\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // Establece el valor de búsqueda en una cadena vacía\n//     dispatch(getPokemon(allPokemons)); // Muestra todos los Pokémon\n//   }\n\n  \n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n  \n//   // Función para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const order = event.target.value; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(order)); // Llama a la acción para ordenar los Pokémons\n//   };\n  \n//   // Filtrado por ORIGEN \n//   const handleOrigin = (event) =>{\n//     event.preventDefault();\n//     const origin = event.target.event\n//     dispatch(filterByOrigin(origin));\n//   };\n  \n//   // Filtrado por TYPE\n//   const [selectedType, setSelectedType] = useState(\"\"); // Estado para almacenar el tipo seleccionado\n  \n//   const handleTypeChange = (event) => {\n//     const type = event.target.value;\n//     setSelectedType(type); // Actualiza el tipo seleccionado en el estado local\n//     dispatch(filterByType(type)); // Llama a la acción para filtrar los Pokémon por tipo\n//   };\n  \n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }else if(event.target.name === \"order\"){\n//       dispatch(getPokemon(allPokemons))\n//     }\n//   }\n  \n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n  \n//   const paginate = (pageNumber) => {\n//     setCurrentPage(pageNumber);\n//   };\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n\n//   const nextHandler = () => {\n//     // verificamos si estámos en la última página, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // Validación para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">All pokemon</option>\n//         <option value=\"AA\">(A-Z)</option>\n//         <option value=\"ZA\">(Z-A)</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} value={selectedType}>\n//         <option  value=\"All\">All pokemon</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOrigin(event)}>\n//               <option value=\"All\">All pokemon</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\n\nimport NavBar from '../../Components/NavBar/NavBar';\nimport React, { useEffect, useState } from 'react';\nimport styles from './HomePage.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const pokemonsCopy = useSelector((state) => state.pokemonsCopy); // Copia de la lista de Pokémon ordenada\n  const allPokemons = useSelector((state) => state.allPokemons);\n  const allTypes = useSelector((state) => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n\n  function handleChange(event) {\n    event.preventDefault();\n    setSearchPokemon(event.target.value);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchPokemon) {\n      dispatch(getPokemonByName(searchPokemon));\n    } else {\n      dispatch(getPokemon());\n    }\n  }\n\n  function handleClearSearch() {\n    setSearchPokemon('');\n    dispatch(getPokemon());\n  }\n\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  const handleOrderChange = (event) => {\n    event.preventDefault();\n    const order = event.target.value;\n    dispatch(orderByName(order));\n  };\n\n  const handleOrigin = (event) => {\n    event.preventDefault();\n    const origin = event.target.event;\n    dispatch(filterByOrigin(origin));\n  };\n\n  const [selectedType, setSelectedType] = useState(''); // Estado para almacenar el tipo seleccionado\n\n  const handleTypeChange = (event) => {\n    const type = event.target.value;\n    setSelectedType(type);\n    dispatch(filterByType(type));\n  };\n\n  const handleClearFilters = (event) => {\n    const filterValue = event.target.value;\n    if (filterValue === 'All') {\n      dispatch(getPokemon()); // Cargar los Pokémon originales\n    }\n  };\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n\n  \n  const nextHandler = () => {\n    if (indexOfFirstPokemon + pokemonsPerPage >= pokemonsCopy.length) {\n      return;\n    }\n    if (indexOfFirstPokemon >= pokemonsCopy.length) return;\n    setCurrentPage(currentPage + 1);\n  };\n  \n  const prevHandler = () => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  };\n  \n  // Paginado\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n  \n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = pokemonsCopy.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  \n  useEffect(() => {\n    if (currentPokemons.length === 0) setCurrentPage(1);\n  }, [currentPokemons]);\n  \n\n  return (\n    <>\n      <div>\n        <NavBar handleChange={handleChange} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch} />\n      </div>\n\n      <div className={styles.filters}>\n        <div>\n          <select className={styles.filter_types} onChange={handleOrderChange} name='order' value=\"All\">\n            <option value=\"All\">All pokemon</option>\n            <option value=\"AA\">(A-Z)</option>\n            <option value=\"ZA\">(Z-A)</option>\n          </select>\n        </div>\n        <div>\n          <select className={styles.filter_types} onChange={handleTypeChange} name='types' value=\"All\">\n            <option value=\"All\">All pokemon</option>\n            {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}\n          </select>\n        </div>\n        <div >\n          <select className={styles.filter_types} name=\"origen\" value=\"All\" onChange={(event) => handleOrigin(event)}>\n            <option value=\"All\">All pokemon</option>\n            <option value=\"created\">DB</option>\n            <option value=\"api\">API</option>\n          </select>\n        </div>\n      </div>\n\n      <div className={styles.home_cards}>\n        <Cards allPokemons={currentPokemons} />\n      </div>\n      <div className={styles.pagination_container}>\n        <button className={styles.pagination_button} onClick={prevHandler} disabled={currentPage === 1}>Prev</button>\n        <button className={styles.pagination_button}>{currentPage}</button>\n        <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= pokemonsCopy.length}>Next</button>\n      </div>\n    </>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,MAAM,MAAM,gCAAgC;AACnD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,uBAAuB;AAC1C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,EAAEC,YAAY,EAAEC,UAAU,EAAEC,gBAAgB,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,qBAAqB;AACvH,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B,MAAMgB,YAAY,GAAGf,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACD,YAAY,CAAC,CAAC,CAAC;EACjE,MAAME,WAAW,GAAGjB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACC,WAAW,CAAC;EAC7D,MAAMC,QAAQ,GAAGlB,WAAW,CAAEgB,KAAK,IAAKA,KAAK,CAACE,QAAQ,CAAC;EACvD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAEtD,SAASwB,YAAYA,CAACC,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBH,gBAAgB,CAACE,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC;EACtC;EAEA,SAASC,YAAYA,CAACJ,KAAK,EAAE;IAC3BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIJ,aAAa,EAAE;MACjBL,QAAQ,CAACV,gBAAgB,CAACe,aAAa,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLL,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;IACxB;EACF;EAEA,SAASwB,iBAAiBA,CAAA,EAAG;IAC3BP,gBAAgB,CAAC,EAAE,CAAC;IACpBN,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EACxB;EAEAP,SAAS,CAAC,MAAM;IACdkB,QAAQ,CAACT,QAAQ,CAAC,CAAC,CAAC;IACpBS,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACW,QAAQ,CAAC,CAAC;EAEd,MAAMc,iBAAiB,GAAIN,KAAK,IAAK;IACnCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMM,KAAK,GAAGP,KAAK,CAACE,MAAM,CAACC,KAAK;IAChCX,QAAQ,CAACR,WAAW,CAACuB,KAAK,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,YAAY,GAAIR,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,MAAMQ,MAAM,GAAGT,KAAK,CAACE,MAAM,CAACF,KAAK;IACjCR,QAAQ,CAACb,cAAc,CAAC8B,MAAM,CAAC,CAAC;EAClC,CAAC;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAEtD,MAAMqC,gBAAgB,GAAIZ,KAAK,IAAK;IAClC,MAAMa,IAAI,GAAGb,KAAK,CAACE,MAAM,CAACC,KAAK;IAC/BQ,eAAe,CAACE,IAAI,CAAC;IACrBrB,QAAQ,CAACZ,YAAY,CAACiC,IAAI,CAAC,CAAC;EAC9B,CAAC;EAED,MAAMC,kBAAkB,GAAId,KAAK,IAAK;IACpC,MAAMe,WAAW,GAAGf,KAAK,CAACE,MAAM,CAACC,KAAK;IACtC,IAAIY,WAAW,KAAK,KAAK,EAAE;MACzBvB,QAAQ,CAACX,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;IAC1B;EACF,CAAC;;EAED,MAAM,CAACmC,WAAW,EAAEC,cAAc,CAAC,GAAG1C,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAAC2C,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAGtC,MAAM4C,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIC,mBAAmB,GAAGF,eAAe,IAAIzB,YAAY,CAAC4B,MAAM,EAAE;MAChE;IACF;IACA,IAAID,mBAAmB,IAAI3B,YAAY,CAAC4B,MAAM,EAAE;IAChDJ,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACjC,CAAC;EAED,MAAMM,WAAW,GAAGA,CAAA,KAAM;IACxB,IAAIN,WAAW,KAAK,CAAC,EAAE;IACvBC,cAAc,CAACD,WAAW,GAAG,CAAC,CAAC;EACjC,CAAC;;EAED;EACA,MAAMO,QAAQ,GAAIC,UAAU,IAAK;IAC/BP,cAAc,CAACO,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,kBAAkB,GAAGT,WAAW,GAAGE,eAAe;EACxD,MAAME,mBAAmB,GAAGK,kBAAkB,GAAGP,eAAe;EAChE,MAAMQ,eAAe,GAAGjC,YAAY,CAACkC,KAAK,CAACP,mBAAmB,EAAEK,kBAAkB,CAAC;EAEnFnD,SAAS,CAAC,MAAM;IACd,IAAIoD,eAAe,CAACL,MAAM,KAAK,CAAC,EAAEJ,cAAc,CAAC,CAAC,CAAC;EACrD,CAAC,EAAE,CAACS,eAAe,CAAC,CAAC;EAGrB,oBACEvC,OAAA,CAAAE,SAAA;IAAAuC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,eACEzC,OAAA,CAACf,MAAM;QAAC2B,YAAY,EAAEA,YAAa;QAACK,YAAY,EAAEA,YAAa;QAACC,iBAAiB,EAAEA;MAAkB;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrG,CAAC,eAEN7C,OAAA;MAAK8C,SAAS,EAAEzD,MAAM,CAAC0D,OAAQ;MAAAN,QAAA,gBAC7BzC,OAAA;QAAAyC,QAAA,eACEzC,OAAA;UAAQ8C,SAAS,EAAEzD,MAAM,CAAC2D,YAAa;UAACC,QAAQ,EAAE9B,iBAAkB;UAAC+B,IAAI,EAAC,OAAO;UAAClC,KAAK,EAAC,KAAK;UAAAyB,QAAA,gBAC3FzC,OAAA;YAAQgB,KAAK,EAAC,KAAK;YAAAyB,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC7C,OAAA;YAAQgB,KAAK,EAAC,IAAI;YAAAyB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACjC7C,OAAA;YAAQgB,KAAK,EAAC,IAAI;YAAAyB,QAAA,EAAC;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN7C,OAAA;QAAAyC,QAAA,eACEzC,OAAA;UAAQ8C,SAAS,EAAEzD,MAAM,CAAC2D,YAAa;UAACC,QAAQ,EAAExB,gBAAiB;UAACyB,IAAI,EAAC,OAAO;UAAClC,KAAK,EAAC,KAAK;UAAAyB,QAAA,gBAC1FzC,OAAA;YAAQgB,KAAK,EAAC,KAAK;YAAAyB,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EACvCpC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE0C,GAAG,CAACC,IAAI,iBAAIpD,OAAA;YAAmBgB,KAAK,EAAEoC,IAAK;YAAAX,QAAA,EAAEW;UAAI,GAAxBA,IAAI;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAAC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN7C,OAAA;QAAAyC,QAAA,eACEzC,OAAA;UAAQ8C,SAAS,EAAEzD,MAAM,CAAC2D,YAAa;UAACE,IAAI,EAAC,QAAQ;UAAClC,KAAK,EAAC,KAAK;UAACiC,QAAQ,EAAGpC,KAAK,IAAKQ,YAAY,CAACR,KAAK,CAAE;UAAA4B,QAAA,gBACzGzC,OAAA;YAAQgB,KAAK,EAAC,KAAK;YAAAyB,QAAA,EAAC;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACxC7C,OAAA;YAAQgB,KAAK,EAAC,SAAS;YAAAyB,QAAA,EAAC;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACnC7C,OAAA;YAAQgB,KAAK,EAAC,KAAK;YAAAyB,QAAA,EAAC;UAAG;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC1B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAEN7C,OAAA;MAAK8C,SAAS,EAAEzD,MAAM,CAACgE,UAAW;MAAAZ,QAAA,eAChCzC,OAAA,CAACF,KAAK;QAACU,WAAW,EAAE+B;MAAgB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC,eACN7C,OAAA;MAAK8C,SAAS,EAAEzD,MAAM,CAACiE,oBAAqB;MAAAb,QAAA,gBAC1CzC,OAAA;QAAQ8C,SAAS,EAAEzD,MAAM,CAACkE,iBAAkB;QAACC,OAAO,EAAErB,WAAY;QAACsB,QAAQ,EAAE5B,WAAW,KAAK,CAAE;QAAAY,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7G7C,OAAA;QAAQ8C,SAAS,EAAEzD,MAAM,CAACkE,iBAAkB;QAAAd,QAAA,EAAEZ;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC,eACnE7C,OAAA;QAAQ8C,SAAS,EAAEzD,MAAM,CAACkE,iBAAkB;QAACC,OAAO,EAAExB,WAAY;QAACyB,QAAQ,EAAExB,mBAAmB,GAAGF,eAAe,IAAIzB,YAAY,CAAC4B,MAAO;QAAAO,QAAA,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrJ,CAAC;EAAA,eACN,CAAC;AAEP,CAAC;AAACzC,EAAA,CAhIID,QAAQ;EAAA,QACKb,WAAW,EACPC,WAAW,EACZA,WAAW,EACdA,WAAW;AAAA;AAAAmE,EAAA,GAJxBvD,QAAQ;AAkId,eAAeA,QAAQ;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}