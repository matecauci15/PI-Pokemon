{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/Pagination/Pagination.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport getColorForType from '../../utils/colors';\nimport './pagination.css';\n// import { getPokemon } from '../../Redux/actions';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Paginate = pageNumber => {\n  _s();\n  const {\n    allPokemons\n  } = useSelector(state => state);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  // const handlePage = (num) => {\n  //     if(num > 0 && num <= paginasTotales) setPaginaActual(num)\n  // }\n\n  // useEffect(()=>{\n  //     handlePage(1)\n  // }, [allPokemons])\n\n  setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagiantion\",\n      children: currentPokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"article\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: `/${pokemon.name}`,\n          className: \"detail_links\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"pokemon_image\"\n            //   src={getPokemonImageURL(pokemon)}\n            ,\n            alt: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: pokemon.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), pokemonDetails[pokemon.name] && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: pokemonDetails[pokemon.name].types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"types\",\n              style: {\n                backgroundColor: getColorForType(type.type.name)\n              },\n              children: type.type.name\n            }, type.type.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, pokemon.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination-container\",\n      children: Array.from({\n        length: Math.ceil(allPokemons.length / pokemonsPerPage)\n      }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => Paginate(index + 1),\n        className: `pagination-button ${index + 1 === currentPage ? \"active\" : \"\"}`,\n        children: index + 1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(Paginate, \"DcY93XD29eZ7leqIzqz0Ozb5Luc=\", false, function () {\n  return [useSelector];\n});\n_c = Paginate;\nexport default Paginate;\nvar _c;\n$RefreshReg$(_c, \"Paginate\");","map":{"version":3,"names":["useState","getColorForType","useSelector","jsxDEV","_jsxDEV","Paginate","pageNumber","_s","allPokemons","state","currentPage","setCurrentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","children","className","map","pokemon","Link","to","name","alt","fileName","_jsxFileName","lineNumber","columnNumber","pokemonDetails","types","type","style","backgroundColor","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/Pagination/Pagination.js"],"sourcesContent":["import { useState } from 'react';\nimport getColorForType from '../../utils/colors';\nimport './pagination.css'\n// import { getPokemon } from '../../Redux/actions';\nimport { useSelector } from 'react-redux';\n\n\nconst Paginate = (pageNumber) => {\n    \n    const {allPokemons} = useSelector(state => state)\n    const [currentPage, setCurrentPage] = useState(1);\n    const [pokemonsPerPage] = useState(12);\n    \n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n    const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n    // const handlePage = (num) => {\n    //     if(num > 0 && num <= paginasTotales) setPaginaActual(num)\n    // }\n\n    // useEffect(()=>{\n    //     handlePage(1)\n    // }, [allPokemons])\n    \n    setCurrentPage(pageNumber);\n\n    return (\n        <div>\n            <div className='pagiantion'>\n\n            {currentPokemons.map((pokemon) => (\n            <div className=\"article\" key={pokemon.name}>\n              <Link to={`/${pokemon.name}`} className=\"detail_links\">\n                <img\n                  className=\"pokemon_image\"\n                //   src={getPokemonImageURL(pokemon)}\n                  alt={pokemon.name}\n                />\n                <h2>{pokemon.name}</h2>\n                {pokemonDetails[pokemon.name] && (\n                  <p>\n                    {\n                    pokemonDetails[pokemon.name].types.map((type) => (\n                    <span className='types' key={type.type.name} style={{ backgroundColor: getColorForType(type.type.name) }}>\n                      {type.type.name}\n                    </span>\n                  ))\n                  }\n                  </p>\n                )}\n              </Link>\n            </div>\n          ))}\n            </div>\n            <div className=\"pagination-container\">\n            {Array.from({\n              length: Math.ceil(allPokemons.length / pokemonsPerPage),\n            }).map((_, index) => (\n              <button\n                key={index}\n                onClick={() => Paginate(index + 1)}\n                className={`pagination-button ${\n                  index + 1 === currentPage ? \"active\" : \"\"\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </div>\n    )\n};\n\nexport default Paginate"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}