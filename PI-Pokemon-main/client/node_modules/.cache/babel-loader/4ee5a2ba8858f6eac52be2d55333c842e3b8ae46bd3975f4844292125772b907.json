{"ast":null,"code":"import { GET_POKEMONS } from '../actions/pokemonActions';\nimport { GET_DETAILS } from '../actions/detailCardActions';\nimport { GET_BY_NAME } from '../actions/getByNameActions';\nimport { GET_TYPES } from '../actions/getTypesActions';\nimport { CLEAR_POKEMON } from '../actions/clearPokemonActions';\nimport { FILTER_AZ, FILTER_TYPE } from '../actions/filterPokemonsActions';\nimport { CREATE_POKEMON } from 'store/actions/createPokemonActions';\nimport { SET_POKEMONS } from '../actions/setPokemons';\nconst initialState = {\n  pokemons: [],\n  copyPokemon: [],\n  details: null,\n  byName: null,\n  types: [],\n  createPokemon: {}\n};\nconst reducer = (state = initialState, action) => {\n  var _state$pokemons, _state$pokemons2, _state$pokemons3, _state$pokemons4;\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        copyPokemon: action.payload\n      };\n    case SET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload\n      };\n    case GET_DETAILS:\n      return {\n        ...state,\n        details: action.payload\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        byName: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case CLEAR_POKEMON:\n      return {\n        ...state,\n        byName: action.payload,\n        details: action.payload\n      };\n    case FILTER_AZ:\n      const masterFilterAZ = state === null || state === void 0 ? void 0 : state.pokemons;\n      let sort = action.payload === 'asc' ? (_state$pokemons = state.pokemons) === null || _state$pokemons === void 0 ? void 0 : _state$pokemons.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        return 0;\n      }) : action.payload === 'desc' ? (_state$pokemons2 = state.pokemons) === null || _state$pokemons2 === void 0 ? void 0 : _state$pokemons2.sort((a, b) => {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (b.name > a.name) {\n          return 1;\n        }\n        return 0;\n      }) : action.payload === 'down' ? (_state$pokemons3 = state.pokemons) === null || _state$pokemons3 === void 0 ? void 0 : _state$pokemons3.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return 1;\n        }\n        if (b.attack > a.attack) {\n          return -1;\n        }\n        return 0;\n      }) : action.payload === 'up' ? (_state$pokemons4 = state.pokemons) === null || _state$pokemons4 === void 0 ? void 0 : _state$pokemons4.sort((a, b) => {\n        if (a.attack > b.attack) {\n          return -1;\n        }\n        if (b.attack > a.attack) {\n          return 1;\n        }\n        return 0;\n      }) : action.payload === 'sort' ? masterFilterAZ : null;\n      return {\n        ...state,\n        pokemons: sort\n      };\n    case FILTER_TYPE:\n      const pokemons1 = state === null || state === void 0 ? void 0 : state.copyPokemon;\n      const filtApi = pokemons1 === null || pokemons1 === void 0 ? void 0 : pokemons1.filter(p => p.type);\n      const fromApi = filtApi === null || filtApi === void 0 ? void 0 : filtApi.filter(p => {\n        var _p$type;\n        return (_p$type = p.type) === null || _p$type === void 0 ? void 0 : _p$type.find(el => el.toString() === action.payload);\n      });\n      // const filtDb = state.copyPokemon?.filter((p) => p.types);\n      // const fromDb = filtDb?.filter((p) => p.types.find((el) => el.name.toString() === action.payload));\n      // const both = fromApi && fromDb ? [...fromApi, ...fromDb] : null;\n      const onlyDb = pokemons1 === null || pokemons1 === void 0 ? void 0 : pokemons1.filter(p => typeof p.id !== 'number');\n      const filtAll = action.payload === 'all' ? pokemons1 : action.payload === 'database' ? onlyDb : fromApi;\n      return {\n        ...state,\n        pokemons: filtAll ? filtAll : pokemons1\n      };\n    case CREATE_POKEMON:\n      return {\n        ...state,\n        createPokemon: action.payload\n      };\n    default:\n      return {\n        state\n      };\n  }\n  ;\n};\nexport default reducer;","map":{"version":3,"names":["GET_POKEMONS","GET_DETAILS","GET_BY_NAME","GET_TYPES","CLEAR_POKEMON","FILTER_AZ","FILTER_TYPE","CREATE_POKEMON","SET_POKEMONS","initialState","pokemons","copyPokemon","details","byName","types","createPokemon","reducer","state","action","_state$pokemons","_state$pokemons2","_state$pokemons3","_state$pokemons4","type","payload","masterFilterAZ","sort","a","b","name","attack","pokemons1","filtApi","filter","p","fromApi","_p$type","find","el","toString","onlyDb","id","filtAll"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/store/reducers/index.js"],"sourcesContent":["import { GET_POKEMONS } from '../actions/pokemonActions'\nimport { GET_DETAILS } from '../actions/detailCardActions'\nimport { GET_BY_NAME } from '../actions/getByNameActions'\nimport { GET_TYPES } from '../actions/getTypesActions'\nimport { CLEAR_POKEMON } from '../actions/clearPokemonActions';\nimport { FILTER_AZ, FILTER_TYPE } from '../actions/filterPokemonsActions'\nimport { CREATE_POKEMON } from 'store/actions/createPokemonActions';\nimport { SET_POKEMONS } from '../actions/setPokemons'\n\n\nconst initialState = {\n  pokemons: [],\n  copyPokemon: [],\n  details: null,\n  byName: null,\n  types: [],\n  createPokemon: {},\n};\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n        copyPokemon: action.payload,\n      };\n    case SET_POKEMONS:\n      return {\n        ...state,\n        pokemons: action.payload,\n      }\n    case GET_DETAILS:\n      return {\n        ...state,\n        details: action.payload,\n      };\n    case GET_BY_NAME:\n      return {\n        ...state,\n        byName: action.payload,\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload,\n      };\n    case CLEAR_POKEMON:\n      return {\n        ...state,\n        byName: action.payload,\n        details: action.payload,\n      };\n    case FILTER_AZ:\n      const masterFilterAZ = state?.pokemons;\n      let sort =\n        action.payload === 'asc'\n          ? state.pokemons?.sort((a, b) => {\n            if (a.name > b.name) {\n              return 1;\n            }\n            if (b.name > a.name) {\n              return -1;\n            }\n            return 0;\n          })\n          : action.payload === 'desc' ?\n            state.pokemons?.sort((a, b) => {\n              if (a.name > b.name) {\n                return -1;\n              }\n              if (b.name > a.name) {\n                return 1;\n              }\n              return 0;\n            })\n            : action.payload === 'down'\n              ? state.pokemons?.sort((a, b) => {\n                if (a.attack > b.attack) {\n                  return 1;\n                }\n                if (b.attack > a.attack) {\n                  return -1;\n                }\n                return 0;\n              }) : action.payload === 'up' ?\n                state.pokemons?.sort((a, b) => {\n                  if (a.attack > b.attack) {\n                    return -1;\n                  }\n                  if (b.attack > a.attack) {\n                    return 1;\n                  }\n                  return 0;\n                }) :\n                action.payload === 'sort' ?\n                  masterFilterAZ : null;\n      return {\n        ...state,\n        pokemons: sort\n      };\n    case FILTER_TYPE:\n      const pokemons1 = state?.copyPokemon;\n      const filtApi = pokemons1?.filter((p) => p.type);\n      const fromApi = filtApi?.filter((p) => p.type?.find((el) => el.toString() === action.payload));\n      // const filtDb = state.copyPokemon?.filter((p) => p.types);\n      // const fromDb = filtDb?.filter((p) => p.types.find((el) => el.name.toString() === action.payload));\n      // const both = fromApi && fromDb ? [...fromApi, ...fromDb] : null;\n      const onlyDb = pokemons1?.filter((p) => typeof p.id !== 'number');\n      const filtAll = action.payload === 'all' ? pokemons1 : action.payload === 'database' ? onlyDb : fromApi;\n      return {\n        ...state,\n        pokemons: filtAll ? filtAll : pokemons1\n      };\n    case CREATE_POKEMON:\n      return {\n        ...state,\n        createPokemon: action.payload,\n      };\n    default:\n      return {\n        state,\n      };\n  };\n}\n\nexport default reducer;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}