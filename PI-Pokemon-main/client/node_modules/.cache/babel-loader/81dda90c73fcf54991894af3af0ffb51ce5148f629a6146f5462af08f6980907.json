{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import './Form.css'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { postPokemon } from '../../Redux/actions'\n// import axios from 'axios'\n\n// const Form = () => {\n//     const [types, setTypes] = useState([])\n//     // const types = useSelector(state=> state.types)\n\n//     useEffect(()=>{\n//         axios.get(`http://localhost:3001/types/`)\n//         .then(({ data }) => {\n//         setTypes(data);\n//           });\n//       },[])\n\n//     const dispatch = useDispatch()\n\n//     const [state, setState] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: []\n//     })\n//     console.log(state);\n\n//     const [errors, setErrors] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: \"\"  \n//     })\n\n//     const validation = (state, name) => {\n//         if(name === \"name\"){\n//             if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n//             else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n//             else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n//             else setErrors({...errors, name: ''})\n\n//         }\n//         if(name === \"image\"){\n//             const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n//             if (state.image === '') {\n//               return setErrors({ ...errors, image: 'The image URL is required' });\n//             }\n//             if(!urlRegex.test(state.image)){\n//               return setErrors({...errors, image: 'URL inválida'})\n//             } else {\n//               return setErrors({ ...errors, image: '' });\n//             };\n\n//         }\n//         if(name === \"hp\"){\n//             if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n//             else setErrors({...errors, hp: ''})\n//         }\n//         if(name === \"attack\"){\n//             if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n//             else setErrors({...errors, attack: ''})\n//         }\n//         if(name === \"defense\"){\n//             if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n//             else setErrors({...errors, defense: ''})\n//         }\n//         if(name === \"speed\"){\n//             if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n//             else setErrors({...errors, speed: ''})\n//         }\n//         if(name === \"height\"){\n//             if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n//             else setErrors({...errors, height : ''})\n//         }\n//         if(name === \"weight\"){\n//             if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n//             else setErrors({...errors, weight : ''})\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         event.preventDefault()\n\n//         if(event.target.name === \"types\"){\n//             if(state.types.length > 1){ setErrors({...errors, types: \"Select max two types\"})\n//             // return\n//         }\n//             else if(state.types.includes(event.target.value)) return\n//             setState({\n//                 ...state,\n//                 [event.target.name]: [...state[event.target.name], event.target.value]\n//             }) \n//             return \n//         }\n\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.value\n//         })\n//         validation({\n//             ...state,\n//             [event.target.name]: event.target.value, \n//         }, event.target.name)\n//     }\n\n// const disableButton = ()=>{\n//     let disabled = true;\n//     for (let error in errors) {\n//       if (errors[error] === \"\" || errors[error].length === 0) disabled = false;\n//       else {\n//         disabled = true;\n//         break;\n//       }\n//     }\n//     return disabled;\n//   }\n\n//   const handleSelect = (event) => {\n//     event.preventDefault();\n//     const selectedValue = event.target.value;\n\n//     if (!state.types.includes(selectedValue)) {\n//       setErrors({...errors, types: ''})\n//       setState({...state, types: [...state.types, selectedValue]})\n//     } else {\n//       // Muestra un mensaje de error o realiza alguna acción\n//       alert('Este tipo ya ha sido seleccionado.');\n//     }\n//   };\n\n//     const removeTipo = (event) => {\n//         // const value = document.getElementById(event.target.name).value\n//         setState({\n//             ...state,\n//             [event.target.name]: [...state[event.target.name].filter(x => x!== event.target.id)]\n//         })\n//     }\n\n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//         dispatch(postPokemon(state));\n//         setState({\n//           name: '',\n//           hp: '',\n//           attack: '',\n//           defense: '',\n//           speed: '',\n//           height: '',\n//           weight: '',\n//           image: '',\n//           types: []\n//         });\n//       }\n\n//     return (\n//         <div className='form_general'>\n//             {console.log(errors)}\n//         <form className='pokemon_form' onSubmit={handleSubmit} >\n//             <input onChange={handleChange} type=\"text\" name='name' placeholder='Name'/>\n//             <span>{errors.name}</span>\n//             <input onChange={handleChange} type=\"text\" name='image' placeholder='image'/>\n//             <input onChange={handleChange} type=\"number\" name='hp' placeholder='hp'/>\n//             <span>{errors.hp}</span>\n//             <input onChange={handleChange} type=\"number\" name='attack' placeholder='Attack'/>\n//             <span>{errors.attack}</span>\n//             <input onChange={handleChange} type=\"number\" name='defense' placeholder='Defense'/>\n//             <span>{errors.defense}</span>\n//             <input onChange={handleChange} type=\"number\" name='speed' placeholder='Speed'/>\n//             <span>{errors.speed}</span>\n//             <input onChange={handleChange} type=\"number\" name='height' placeholder='Height'/>\n//             <span>{errors.height}</span>\n//             <input onChange={handleChange} type=\"number\" name='weight' placeholder='Weight'/>\n//             <span>{errors.weight}</span>\n//                 <div className='type_options'>\n//                 <label>Types: </label>\n//                 <select onChange={handleChange} name=\"types\" id=\"\">\n//                 {types?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//                 </select>\n//                     {\n//                         state.types.map((tipo, index) => (\n//                           <div key={index}>\n//                             <span >{tipo}</span>\n//                             <button id={tipo} type='button' name=\"types\" onClick={removeTipo}>X</button>\n//                           </div>\n//                         ))\n//                     }\n\n//                 <button onClick={handleChange} disabled={disableButton()} type='submit'>Submit</button>\n\n//             </div>\n\n//          <Link className='linktohome' to={'/homePage'}>\n//             <button id='button' className='button_back'>  Back to home  </button> \n//          </Link>\n//         </form>\n//     </div> \n//   )\n// }\n\n// export default Form\n\nimport React, { useEffect } from 'react';\nimport './Form.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { postPokemon } from '../../Redux/actions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const dispatch = useDispatch();\n\n  // State Global types\n  const [types, setTypes] = useState([]);\n  // const types = useSelector(state=> state.types)\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/types/`).then(({\n      data\n    }) => {\n      setTypes(data);\n    });\n  }, []);\n\n  // State inputs\n  const [state, setState] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: '',\n    types: []\n  });\n\n  // State Errors\n  const [error, setError] = useState({\n    name: '',\n    hp: 'Requiere ser un número',\n    attack: 'Requiere ser un número',\n    defense: 'Requiere ser un número',\n    speed: 'Requiere ser un número',\n    weight: 'Requiere ser un número',\n    height: 'Requiere ser un número',\n    image: 'La URL de la imagen es requerida',\n    types: 'Máximo 2'\n  });\n\n  // Validaciones de inputs\n  const validate = (state, fieldName) => {\n    switch (fieldName) {\n      case 'name':\n        if (state.name === '') {\n          return setError({\n            ...error,\n            name: 'El nombre es requerido'\n          });\n        }\n        if (state.name.length < 5 || state.name.length > 30) return setError({\n          ...error,\n          name: 'El nombre requiere entre 5 a 30 carácteres'\n        });else {\n          return setError({\n            ...error,\n            name: ''\n          });\n        }\n        ;\n      case 'hp':\n        if (isNaN(parseInt(state.hp))) return setError({\n          ...error,\n          hp: 'Requiere que ser un número'\n        });\n        if (state.hp < 0) return setError({\n          ...error,\n          hp: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          hp: ''\n        });\n      case 'attack':\n        if (isNaN(parseInt(state.attack))) return setError({\n          ...error,\n          attack: 'Requiere que ser un número'\n        });\n        if (state.attack < 0) return setError({\n          ...error,\n          attack: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          attack: ''\n        });\n      case 'defense':\n        if (isNaN(parseInt(state.defense))) return setError({\n          ...error,\n          defense: 'Requiere que ser un número'\n        });\n        if (state.defense < 0) return setError({\n          ...error,\n          defense: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          defense: ''\n        });\n      case 'speed':\n        if (isNaN(parseInt(state.speed))) return setError({\n          ...error,\n          speed: 'Requiere que ser un número'\n        });\n        if (state.speed < 0) return setError({\n          ...error,\n          speed: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          speed: ''\n        });\n      case 'height':\n        if (isNaN(parseInt(state.height))) return setError({\n          ...error,\n          height: 'Requiere que ser un número'\n        });\n        if (state.height < 0) return setError({\n          ...error,\n          height: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          height: ''\n        });\n      case 'weight':\n        if (isNaN(parseInt(state.weight))) return setError({\n          ...error,\n          weight: 'Requiere que ser un número'\n        });\n        if (state.weight < 0) return setError({\n          ...error,\n          weight: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          weight: ''\n        });\n      case 'image':\n        const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n        if (state.image === '') {\n          return setError({\n            ...error,\n            image: 'La URL de la imagen es requerida'\n          });\n        }\n        if (!urlRegex.test(state.image)) {\n          return setError({\n            ...error,\n            image: 'URL inválida'\n          });\n        } else {\n          return setError({\n            ...error,\n            image: ''\n          });\n        }\n        ;\n      case 'types':\n        if (state.types.length > 1) setError({\n          ...error,\n          types: ''\n        });\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Disabled Button\n  const disableFunction = () => {\n    let disabled = true;\n    for (let err in error) {\n      if (error[err] === \"\" || error[err].length === 0) disabled = false;else {\n        disabled = true;\n        break;\n      }\n    }\n    return disabled;\n  };\n\n  // Handle Inputs\n  const handleChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n    validate({\n      ...state,\n      [event.target.name]: event.target.value\n    }, event.target.name);\n  };\n\n  // Handle Post\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postPokemon(state));\n    setState({\n      name: '',\n      hp: '',\n      attack: '',\n      defense: '',\n      speed: '',\n      height: '',\n      weight: '',\n      image: '',\n      types: []\n    });\n  };\n\n  // Handle Types\n  const handleSelect = e => {\n    e.preventDefault();\n    const selectedValue = e.target.value;\n    if (!state.types.includes(selectedValue)) {\n      setError({\n        ...error,\n        types: ''\n      });\n      // Agrega el valor seleccionado al arreglo\n      setState({\n        ...state,\n        types: [...state.types, selectedValue]\n      });\n    } else {\n      // Muestra un mensaje de error o realiza alguna acción\n      alert('Este tipo ya ha sido seleccionado.');\n    }\n  };\n\n  // Handle Delete Types\n  const handleDelete = e => {\n    setState({\n      ...state,\n      // estado anterior\n      types: state.types.filter(t => t !== e)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            placeholder: \"Name\",\n            name: \"name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel \",\n            children: error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Hp\",\n            name: \"hp\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.hp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Attack\",\n            name: \"attack\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.attack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Defense\",\n            name: \"defense\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.defense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Speed\",\n            name: \"speed\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Weight\",\n            name: \"weight\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 432,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 431,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Height\",\n            name: \"height\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            placeholder: \"URL imagen\",\n            value: state.image,\n            name: \"image\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 443,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aleatorio\",\n          type: \"button\",\n          children: \"URL Aleatorio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: disableFunction(),\n            className: \"\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"types\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading\",\n          children: \"Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"types\",\n          onChange: e => handleSelect(e),\n          className: \"selectType\",\n          disabled: state.types.length >= 2,\n          children: types.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t.name,\n            children: t.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fila\",\n          children: [state.types.map((e, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divDelete\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"typeElegido\",\n              children: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"botonX\",\n              onClick: () => handleDelete(e),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.types\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 476,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pokemon\",\n          src: state.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 401,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 399,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"jZeKaPZzuDOJuWak/xe128BOqvY=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useState","postPokemon","axios","jsxDEV","_jsxDEV","Form","_s","dispatch","types","setTypes","get","then","data","state","setState","name","hp","attack","defense","speed","height","weight","image","error","setError","validate","fieldName","length","isNaN","parseInt","urlRegex","test","disableFunction","disabled","err","handleChange","event","target","value","handleSubmit","preventDefault","handleSelect","e","selectedValue","includes","alert","handleDelete","filter","t","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import './Form.css'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { postPokemon } from '../../Redux/actions'\n// import axios from 'axios'\n\n// const Form = () => {\n//     const [types, setTypes] = useState([])\n//     // const types = useSelector(state=> state.types)\n\n//     useEffect(()=>{\n//         axios.get(`http://localhost:3001/types/`)\n//         .then(({ data }) => {\n//         setTypes(data);\n//           });\n//       },[])\n\n//     const dispatch = useDispatch()\n\n//     const [state, setState] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: []\n//     })\n//     console.log(state);\n\n//     const [errors, setErrors] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: \"\"  \n//     })\n    \n//     const validation = (state, name) => {\n//         if(name === \"name\"){\n//             if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n//             else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n//             else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n//             else setErrors({...errors, name: ''})\n\n//         }\n//         if(name === \"image\"){\n//             const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n//             if (state.image === '') {\n//               return setErrors({ ...errors, image: 'The image URL is required' });\n//             }\n//             if(!urlRegex.test(state.image)){\n//               return setErrors({...errors, image: 'URL inválida'})\n//             } else {\n//               return setErrors({ ...errors, image: '' });\n//             };\n\n//         }\n//         if(name === \"hp\"){\n//             if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n//             else setErrors({...errors, hp: ''})\n//         }\n//         if(name === \"attack\"){\n//             if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n//             else setErrors({...errors, attack: ''})\n//         }\n//         if(name === \"defense\"){\n//             if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n//             else setErrors({...errors, defense: ''})\n//         }\n//         if(name === \"speed\"){\n//             if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n//             else setErrors({...errors, speed: ''})\n//         }\n//         if(name === \"height\"){\n//             if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n//             else setErrors({...errors, height : ''})\n//         }\n//         if(name === \"weight\"){\n//             if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n//             else setErrors({...errors, weight : ''})\n//         }\n//     }\n\n\n\n//     const handleChange = (event) => {\n//         event.preventDefault()\n\n//         if(event.target.name === \"types\"){\n//             if(state.types.length > 1){ setErrors({...errors, types: \"Select max two types\"})\n//             // return\n//         }\n//             else if(state.types.includes(event.target.value)) return\n//             setState({\n//                 ...state,\n//                 [event.target.name]: [...state[event.target.name], event.target.value]\n//             }) \n//             return \n//         }\n\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.value\n//         })\n//         validation({\n//             ...state,\n//             [event.target.name]: event.target.value, \n//         }, event.target.name)\n//     }\n    \n// const disableButton = ()=>{\n//     let disabled = true;\n//     for (let error in errors) {\n//       if (errors[error] === \"\" || errors[error].length === 0) disabled = false;\n//       else {\n//         disabled = true;\n//         break;\n//       }\n//     }\n//     return disabled;\n//   }\n\n//   const handleSelect = (event) => {\n//     event.preventDefault();\n//     const selectedValue = event.target.value;\n\n//     if (!state.types.includes(selectedValue)) {\n//       setErrors({...errors, types: ''})\n//       setState({...state, types: [...state.types, selectedValue]})\n//     } else {\n//       // Muestra un mensaje de error o realiza alguna acción\n//       alert('Este tipo ya ha sido seleccionado.');\n//     }\n//   };\n      \n    \n//     const removeTipo = (event) => {\n//         // const value = document.getElementById(event.target.name).value\n//         setState({\n//             ...state,\n//             [event.target.name]: [...state[event.target.name].filter(x => x!== event.target.id)]\n//         })\n//     }\n    \n    \n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//         dispatch(postPokemon(state));\n//         setState({\n//           name: '',\n//           hp: '',\n//           attack: '',\n//           defense: '',\n//           speed: '',\n//           height: '',\n//           weight: '',\n//           image: '',\n//           types: []\n//         });\n//       }\n\n//     return (\n//         <div className='form_general'>\n//             {console.log(errors)}\n//         <form className='pokemon_form' onSubmit={handleSubmit} >\n//             <input onChange={handleChange} type=\"text\" name='name' placeholder='Name'/>\n//             <span>{errors.name}</span>\n//             <input onChange={handleChange} type=\"text\" name='image' placeholder='image'/>\n//             <input onChange={handleChange} type=\"number\" name='hp' placeholder='hp'/>\n//             <span>{errors.hp}</span>\n//             <input onChange={handleChange} type=\"number\" name='attack' placeholder='Attack'/>\n//             <span>{errors.attack}</span>\n//             <input onChange={handleChange} type=\"number\" name='defense' placeholder='Defense'/>\n//             <span>{errors.defense}</span>\n//             <input onChange={handleChange} type=\"number\" name='speed' placeholder='Speed'/>\n//             <span>{errors.speed}</span>\n//             <input onChange={handleChange} type=\"number\" name='height' placeholder='Height'/>\n//             <span>{errors.height}</span>\n//             <input onChange={handleChange} type=\"number\" name='weight' placeholder='Weight'/>\n//             <span>{errors.weight}</span>\n//                 <div className='type_options'>\n//                 <label>Types: </label>\n//                 <select onChange={handleChange} name=\"types\" id=\"\">\n//                 {types?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//                 </select>\n//                     {\n//                         state.types.map((tipo, index) => (\n//                           <div key={index}>\n//                             <span >{tipo}</span>\n//                             <button id={tipo} type='button' name=\"types\" onClick={removeTipo}>X</button>\n//                           </div>\n//                         ))\n//                     }\n\n//                 <button onClick={handleChange} disabled={disableButton()} type='submit'>Submit</button>\n\n//             </div>\n\n//          <Link className='linktohome' to={'/homePage'}>\n//             <button id='button' className='button_back'>  Back to home  </button> \n//          </Link>\n//         </form>\n//     </div> \n//   )\n// }\n\n// export default Form\n\nimport React, { useEffect } from 'react'\nimport  './Form.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useState } from 'react'\nimport { postPokemon } from '../../Redux/actions'\nimport axios from 'axios'\n\nfunction Form() {\n\n\n\n  const dispatch = useDispatch();\n\n  // State Global types\n    const [types, setTypes] = useState([])\n    // const types = useSelector(state=> state.types)\n\n    useEffect(()=>{\n        axios.get(`http://localhost:3001/types/`)\n        .then(({ data }) => {\n        setTypes(data);\n          });\n      },[])\n\n  // State inputs\n  const [state, setState] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: '',\n    types: []\n  })\n\n  // State Errors\n  const [error, setError] = useState({\n    name: '',\n    hp: 'Requiere ser un número',\n    attack: 'Requiere ser un número',\n    defense: 'Requiere ser un número',\n    speed: 'Requiere ser un número',\n    weight: 'Requiere ser un número',\n    height: 'Requiere ser un número',\n    image: 'La URL de la imagen es requerida',\n    types: 'Máximo 2'\n  })\n\n  // Validaciones de inputs\n  const validate = (state, fieldName) => {\n    switch (fieldName) {\n      case 'name':\n        if (state.name === '') {\n          return setError({ ...error, name: 'El nombre es requerido' });\n        }\n        if(state.name.length < 5 || state.name.length > 30) return setError({ ...error, name: 'El nombre requiere entre 5 a 30 carácteres' });\n        else {\n          return setError({ ...error, name: '' });\n        };\n\n      case 'hp':\n        if(isNaN(parseInt(state.hp))) return setError({...error, hp: 'Requiere que ser un número'});\n        if(state.hp < 0) return setError({...error, hp: 'Se requiere numero positivo'});\n        else return setError({...error, hp: ''});\n      case 'attack':\n        if(isNaN(parseInt(state.attack))) return setError({...error, attack: 'Requiere que ser un número'});\n        if(state.attack < 0) return setError({...error, attack: 'Se requiere numero positivo'});\n        else return setError({...error, attack: ''});\n      case 'defense':\n        if(isNaN(parseInt(state.defense))) return setError({...error, defense: 'Requiere que ser un número'});\n        if(state.defense < 0) return setError({...error, defense: 'Se requiere numero positivo'});\n        else return setError({...error, defense: ''});\n      case 'speed':\n        if(isNaN(parseInt(state.speed))) return setError({...error, speed: 'Requiere que ser un número'});\n        if(state.speed < 0) return setError({...error, speed: 'Se requiere numero positivo'});\n        else return setError({...error, speed: ''});\n        case 'height':\n          if(isNaN(parseInt(state.height))) return setError({...error, height: 'Requiere que ser un número'});\n          if(state.height < 0) return setError({...error, height: 'Se requiere numero positivo'});\n          else return setError({...error, height: ''});    \n      case 'weight':\n        if(isNaN(parseInt(state.weight))) return setError({...error, weight: 'Requiere que ser un número'});\n        if(state.weight < 0) return setError({...error, weight: 'Se requiere numero positivo'});\n        else return setError({...error, weight: ''});\n\n      case 'image':\n        const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n        if (state.image === '') {\n          return setError({ ...error, image: 'La URL de la imagen es requerida' });\n        }\n        if(!urlRegex.test(state.image)){\n          return setError({...error, image: 'URL inválida'})\n        } else {\n          return setError({ ...error, image: '' });\n        };\n      case 'types':\n          if(state.types.length > 1) setError({...error, types: ''});\n            break\n\n      default:\n        break;\n    }\n  }\n\n  // Disabled Button\n  const disableFunction = ()=>{\n    let disabled = true;\n    for (let err in error) {\n      if (error[err] === \"\" || error[err].length === 0) disabled = false;\n      else {\n        disabled = true;\n        break;\n      }\n    }\n    return disabled;\n  }\n\n  // Handle Inputs\n  const handleChange = (event)=>{\n    setState({\n      ...state,\n      [event.target.name] : event.target.value\n    });\n\n    validate({\n      ...state,\n      [event.target.name] : event.target.value\n    }, event.target.name)\n  }\n\n  // Handle Post\n  const handleSubmit = (event)=>{\n    event.preventDefault();\n    dispatch(postPokemon(state));\n    setState({\n      name: '',\n      hp: '',\n      attack: '',\n      defense: '',\n      speed: '',\n      height: '',\n      weight: '',\n      image: '',\n      types: []\n    });\n  }\n\n  // Handle Types\n  const handleSelect = (e) => {\n    e.preventDefault();\n    const selectedValue = e.target.value;\n\n    if (!state.types.includes(selectedValue)) {\n      setError({...error, types: ''})\n      // Agrega el valor seleccionado al arreglo\n      setState({...state, types: [...state.types, selectedValue]})\n    } else {\n      // Muestra un mensaje de error o realiza alguna acción\n      alert('Este tipo ya ha sido seleccionado.');\n    }\n  };\n\n  // Handle Delete Types\n  const handleDelete = (e) => {\n    setState({\n      ...state, // estado anterior\n      types: state.types.filter((t) => t !== e),\n    });\n  };\n\n\n  \n\n  return (\n    <div className=\"form\">\n\n      <form onSubmit={handleSubmit} className=\"inputs\">\n\n        <div className=\"card\">\n          <p className=\"heading\">Create</p>\n  \n          <div className=\"inputDiv\">\n          <input type=\"text\" className=\"input\" placeholder=\"Name\" name='name' onChange={handleChange} />\n          <label className=\"errorLabel \">{error.name}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Hp\" name='hp' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.hp}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Attack\" name='attack' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.attack}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Defense\" name='defense' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.defense}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Speed\" name='speed' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.speed}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Weight\" name='weight' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.weight}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Height\" name='height' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.height}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"text\" placeholder=\"URL imagen\" value={state.image}  name='image' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.image}</label>\n          </div>\n          <button className=\"aleatorio\" type='button'>URL Aleatorio</button>\n          \n          \n          <div className=\"buttonDiv\">\n            <button disabled={disableFunction()} className=\"\" type='submit'>Submit</button>\n          </div>\n        \n        </div>\n\n        <div className=\"types\">\n          <p className=\"heading\">Types</p>\n          <select name='types' onChange={(e) => handleSelect(e)} className=\"selectType\" disabled={state.types.length >= 2}>\n              {types.map((t, index) => (\n                  <option key={index} value={t.name}>\n                    {t.name}\n                  </option>\n              ))}\n          </select>\n\n          <div className=\"fila\">\n            {state.types.map((e, index) => (\n              <div className=\"divDelete\" key={index}>\n                <p className=\"typeElegido\" >\n                  {e}\n                </p>\n                <button className=\"botonX\" onClick={() => handleDelete(e)}>\n                  X\n                </button>\n              </div>\n            ))}\n\n            <label className=\"errorLabel\">{error.types}</label>\n          </div>\n\n          <img className=\"pokemon\" src={state.image} alt=\"\" />\n\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAQ,YAAY;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}