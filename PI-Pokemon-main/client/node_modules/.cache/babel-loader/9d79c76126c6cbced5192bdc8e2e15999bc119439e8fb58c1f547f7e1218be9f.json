{"ast":null,"code":"import { GET_POKEMONS, GET_POKEMON_NAME, GET_TYPES, ORDER_BY_NAME } from \"./actionsTypes\";\nconst initialState = {\n  allPokemons: [],\n  pokemonsCopy: [],\n  alltypes: []\n};\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_POKEMONS:\n      return {\n        // return copy state so we dont \"pisar\" the state\n        ...state,\n        allPokemons: action.payload,\n        pokemonsCopy: action.payload\n      };\n    case GET_TYPES:\n      return {\n        ...state,\n        types: action.payload\n      };\n    case GET_POKEMON_NAME:\n      return {\n        // return copy state so we dont \"pisar\" the state\n        ...state,\n        allPokemons: action.payload,\n        pokemonsCopy: action.payload\n      };\n    case ORDER_BY_NAME:\n      let sortedAll = action.payload === \"asc\" ? state.allPokemons.sort((a, b) => {\n        if (a.name > b.name) {\n          return 1;\n        }\n        if (b.name > a.name) {\n          return -1;\n        }\n        return 0;\n      }) : state.allPokemons.sort((a, b) => {\n        if (a.name > b.name) {\n          return -1;\n        }\n        if (b.name > a.name) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        allPokemons: sortedAll\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["GET_POKEMONS","GET_POKEMON_NAME","GET_TYPES","ORDER_BY_NAME","initialState","allPokemons","pokemonsCopy","alltypes","rootReducer","state","action","type","payload","types","sortedAll","sort","a","b","name"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Redux/reducer.js"],"sourcesContent":["import { GET_POKEMONS, GET_POKEMON_NAME, GET_TYPES, ORDER_BY_NAME } from \"./actionsTypes\"\n\nconst initialState = {\n    allPokemons: [],\n    pokemonsCopy: [],\n    alltypes: []\n}\n\nconst rootReducer = (state = initialState, action) => {\n    switch(action.type){\n        case GET_POKEMONS:\n            return {\n                // return copy state so we dont \"pisar\" the state\n                ...state,\n                allPokemons: action.payload,\n                pokemonsCopy: action.payload\n            }\n            case GET_TYPES:\n                return {\n                    ...state,\n                    types: action.payload\n            }\n            case GET_POKEMON_NAME:\n                return {\n                    // return copy state so we dont \"pisar\" the state\n                    ...state,\n                    allPokemons: action.payload,\n                    pokemonsCopy: action.payload\n                }\n                    \n                case ORDER_BY_NAME:\n                    let sortedAll =\n                    action.payload === \"asc\"\n                    ? state.allPokemons.sort((a, b) => {\n                        if (a.name > b.name) {\n                            return 1;\n                        }\n                        if (b.name > a.name) {\n                            return -1;\n                        }\n                        return 0;\n                    })\n                    : state.allPokemons.sort((a, b) => {\n                        if (a.name > b.name) {\n                            return -1;\n                        }\n                        if (b.name > a.name) {\n                            return 1;\n                        }\n                        return 0;\n                    });\n                    return {\n                        ...state,\n                        allPokemons: sortedAll,\n                    };\n                    default:\n                        return {...state}\n                    }\n                }\n                \n                export default rootReducer"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,EAAEC,SAAS,EAAEC,aAAa,QAAQ,gBAAgB;AAEzF,MAAMC,YAAY,GAAG;EACjBC,WAAW,EAAE,EAAE;EACfC,YAAY,EAAE,EAAE;EAChBC,QAAQ,EAAE;AACd,CAAC;AAED,MAAMC,WAAW,GAAGA,CAACC,KAAK,GAAGL,YAAY,EAAEM,MAAM,KAAK;EAClD,QAAOA,MAAM,CAACC,IAAI;IACd,KAAKX,YAAY;MACb,OAAO;QACH;QACA,GAAGS,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE,OAAO;QAC3BN,YAAY,EAAEI,MAAM,CAACE;MACzB,CAAC;IACD,KAAKV,SAAS;MACV,OAAO;QACH,GAAGO,KAAK;QACRI,KAAK,EAAEH,MAAM,CAACE;MACtB,CAAC;IACD,KAAKX,gBAAgB;MACjB,OAAO;QACH;QACA,GAAGQ,KAAK;QACRJ,WAAW,EAAEK,MAAM,CAACE,OAAO;QAC3BN,YAAY,EAAEI,MAAM,CAACE;MACzB,CAAC;IAED,KAAKT,aAAa;MACd,IAAIW,SAAS,GACbJ,MAAM,CAACE,OAAO,KAAK,KAAK,GACtBH,KAAK,CAACJ,WAAW,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC/B,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACjB,OAAO,CAAC;QACZ;QACA,IAAID,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,EAAE;UACjB,OAAO,CAAC,CAAC;QACb;QACA,OAAO,CAAC;MACZ,CAAC,CAAC,GACAT,KAAK,CAACJ,WAAW,CAACU,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC/B,IAAID,CAAC,CAACE,IAAI,GAAGD,CAAC,CAACC,IAAI,EAAE;UACjB,OAAO,CAAC,CAAC;QACb;QACA,IAAID,CAAC,CAACC,IAAI,GAAGF,CAAC,CAACE,IAAI,EAAE;UACjB,OAAO,CAAC;QACZ;QACA,OAAO,CAAC;MACZ,CAAC,CAAC;MACF,OAAO;QACH,GAAGT,KAAK;QACRJ,WAAW,EAAES;MACjB,CAAC;IACD;MACI,OAAO;QAAC,GAAGL;MAAK,CAAC;EACrB;AACJ,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}