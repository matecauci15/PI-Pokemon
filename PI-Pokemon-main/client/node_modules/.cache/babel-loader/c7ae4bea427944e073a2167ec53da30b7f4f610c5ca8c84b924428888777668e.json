{"ast":null,"code":"import axios from \"axios\";\nimport { GET_POKEMONS, GET_TYPES, GET_POKEMON_NAME, ORDER_BY_NAME } from \"./actionsTypes\";\n\n// state pq quiero que reciba la info del form\n//dispatch conecta el componente con laas actions, lleva la info del componente al action y del action al reducer\nexport function postPokemon(state) {\n  return async function (dispatch) {\n    try {\n      await axios.post('http://localhost:3001/pokemons/', state);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getPokemon() {\n  return async function (dispatch) {\n    try {\n      const response = await axios.get('http://localhost:3001/pokemons/');\n      dispatch({\n        type: GET_POKEMONS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\nexport function getTypes() {\n  return async dispatch => {\n    try {\n      const {\n        data\n      } = await axios.get('http://localhost:3001/types');\n      dispatch({\n        type: GET_TYPES,\n        payload: data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\nexport function getPokemonByName(name) {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:3001/pokemons/?name=${name}`);\n      dispatch({\n        type: GET_POKEMON_NAME,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}\nexport function orderByName(order) {\n  return async dispatch => {\n    try {\n      // const response = await axios.get(`http://localhost:3001/pokemons/?name=${name}`)\n      dispatch({\n        type: ORDER_BY_NAME,\n        payload: order\n      });\n    } catch (error) {\n      console.log(error.message);\n    }\n  };\n}","map":{"version":3,"names":["axios","GET_POKEMONS","GET_TYPES","GET_POKEMON_NAME","ORDER_BY_NAME","postPokemon","state","dispatch","post","error","console","log","getPokemon","response","get","type","payload","data","getTypes","message","getPokemonByName","name","orderByName","order"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Redux/actions.js"],"sourcesContent":["import axios from \"axios\"\nimport { GET_POKEMONS, GET_TYPES, GET_POKEMON_NAME, ORDER_BY_NAME } from \"./actionsTypes\";\n\n\n// state pq quiero que reciba la info del form\n//dispatch conecta el componente con laas actions, lleva la info del componente al action y del action al reducer\nexport function postPokemon(state){\n    return async function(dispatch){\n        try {\n            await axios.post('http://localhost:3001/pokemons/', state)\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\nexport function getPokemon(){\n    return async function(dispatch){\n        try {\n            const response = await axios.get('http://localhost:3001/pokemons/')\n            dispatch({\n                type: GET_POKEMONS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport function getTypes(){\n    return async (dispatch)=>{\n        try {\n            const {data} = await axios.get('http://localhost:3001/types')\n            dispatch({\n                type: GET_TYPES,\n                payload: data\n            })\n        } catch (error) {\n            console.log(error.message);           \n        }\n    }\n}\n\nexport function getPokemonByName(name){\n    return async (dispatch) => {\n        try {\n            const response = await axios.get(`http://localhost:3001/pokemons/?name=${name}`)\n            dispatch({\n                type: GET_POKEMON_NAME,\n                payload: response.data\n            })\n        }catch(error){\n            console.log(error.message);\n        }\n    }\n}\nexport function orderByName(order){\n    return async (dispatch) => {\n        try {\n            // const response = await axios.get(`http://localhost:3001/pokemons/?name=${name}`)\n            dispatch({\n                type: ORDER_BY_NAME,\n                payload: order\n            })\n        }catch(error){\n            console.log(error.message);\n        }\n    }\n}\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,EAAEC,SAAS,EAAEC,gBAAgB,EAAEC,aAAa,QAAQ,gBAAgB;;AAGzF;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAC;EAC9B,OAAO,gBAAeC,QAAQ,EAAC;IAC3B,IAAI;MACA,MAAMP,KAAK,CAACQ,IAAI,CAAC,iCAAiC,EAAEF,KAAK,CAAC;IAE9D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL;AACA,OAAO,SAASG,UAAUA,CAAA,EAAE;EACxB,OAAO,gBAAeL,QAAQ,EAAC;IAC3B,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,iCAAiC,CAAC;MACnEP,QAAQ,CAAC;QACLQ,IAAI,EAAEd,YAAY;QAClBe,OAAO,EAAEH,QAAQ,CAACI;MACtB,CAAC,CAAC;IACN,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACtB;EACJ,CAAC;AACL;AAEA,OAAO,SAASS,QAAQA,CAAA,EAAE;EACtB,OAAO,MAAOX,QAAQ,IAAG;IACrB,IAAI;MACA,MAAM;QAACU;MAAI,CAAC,GAAG,MAAMjB,KAAK,CAACc,GAAG,CAAC,6BAA6B,CAAC;MAC7DP,QAAQ,CAAC;QACLQ,IAAI,EAAEb,SAAS;QACfc,OAAO,EAAEC;MACb,CAAC,CAAC;IACN,CAAC,CAAC,OAAOR,KAAK,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACU,OAAO,CAAC;IAC9B;EACJ,CAAC;AACL;AAEA,OAAO,SAASC,gBAAgBA,CAACC,IAAI,EAAC;EAClC,OAAO,MAAOd,QAAQ,IAAK;IACvB,IAAI;MACA,MAAMM,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,wCAAuCO,IAAK,EAAC,CAAC;MAChFd,QAAQ,CAAC;QACLQ,IAAI,EAAEZ,gBAAgB;QACtBa,OAAO,EAAEH,QAAQ,CAACI;MACtB,CAAC,CAAC;IACN,CAAC,QAAMR,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACU,OAAO,CAAC;IAC9B;EACJ,CAAC;AACL;AACA,OAAO,SAASG,WAAWA,CAACC,KAAK,EAAC;EAC9B,OAAO,MAAOhB,QAAQ,IAAK;IACvB,IAAI;MACA;MACAA,QAAQ,CAAC;QACLQ,IAAI,EAAEX,aAAa;QACnBY,OAAO,EAAEO;MACb,CAAC,CAAC;IACN,CAAC,QAAMd,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACU,OAAO,CAAC;IAC9B;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}