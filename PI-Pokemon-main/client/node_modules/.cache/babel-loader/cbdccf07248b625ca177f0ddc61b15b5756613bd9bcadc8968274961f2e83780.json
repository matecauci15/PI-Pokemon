{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './Form.css';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { postPokemon } from '../../Redux/actions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const [types, setTypes] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:3001/types/`).then(({\n      data\n    }) => {\n      setTypes(data);\n    });\n  }, []);\n  const dispatch = useDispatch();\n  const [state, setState] = useState({\n    name: \"\",\n    image: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    height: \"\",\n    weight: \"\",\n    types: []\n  });\n  console.log(state);\n  const [errors, setErrors] = useState({\n    name: \"\",\n    image: \"\",\n    hp: \"\",\n    attack: \"\",\n    defense: \"\",\n    speed: \"\",\n    height: \"\",\n    weight: \"\",\n    types: \"\"\n  });\n\n  // const validation = (state, name) => {\n  //     if(name === \"name\"){\n  //         if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n  //         else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n  //         else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n  //         else setErrors({...errors, name: ''})\n\n  //     }\n  //     if(name === \"image\"){\n  //         const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n  //         if (state.image === '') {\n  //           return setErrors({ ...errors, image: 'The image URL is required' });\n  //         }\n  //         if(!urlRegex.test(state.image)){\n  //           return setErrors({...errors, image: 'URL inválida'})\n  //         } else {\n  //           return setErrors({ ...errors, image: '' });\n  //         };\n\n  //     }\n  //     if(name === \"hp\"){\n  //         if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n  //         else setErrors({...errors, hp: ''})\n  //     }\n  //     if(name === \"attack\"){\n  //         if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n  //         else setErrors({...errors, attack: ''})\n  //     }\n  //     if(name === \"defense\"){\n  //         if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n  //         else setErrors({...errors, defense: ''})\n  //     }\n  //     if(name === \"speed\"){\n  //         if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n  //         else setErrors({...errors, speed: ''})\n  //     }\n  //     if(name === \"height\"){\n  //         if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n  //         else setErrors({...errors, height : ''})\n  //     }\n  //     if(name === \"weight\"){\n  //         if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n  //         else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n  //         else setErrors({...errors, weight : ''})\n  //     }\n  // }\n\n  const validate = (state, fieldName) => {\n    switch (fieldName) {\n      case 'name':\n        if (state.name === '') {\n          return setError({\n            ...error,\n            name: 'El nombre es requerido'\n          });\n        }\n        if (state.name.length < 5 || state.name.length > 30) return setError({\n          ...error,\n          name: 'El nombre requiere entre 5 a 30 carácteres'\n        });else {\n          return setError({\n            ...error,\n            name: ''\n          });\n        }\n        ;\n      case 'hp':\n        if (isNaN(parseInt(state.hp))) return setError({\n          ...error,\n          hp: 'Requiere que ser un número'\n        });\n        if (state.hp < 0) return setError({\n          ...error,\n          hp: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          hp: ''\n        });\n      case 'attack':\n        if (isNaN(parseInt(state.attack))) return setError({\n          ...error,\n          attack: 'Requiere que ser un número'\n        });\n        if (state.attack < 0) return setError({\n          ...error,\n          attack: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          attack: ''\n        });\n      case 'defense':\n        if (isNaN(parseInt(state.defense))) return setError({\n          ...error,\n          defense: 'Requiere que ser un número'\n        });\n        if (state.defense < 0) return setError({\n          ...error,\n          defense: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          defense: ''\n        });\n      case 'speed':\n        if (isNaN(parseInt(state.speed))) return setError({\n          ...error,\n          speed: 'Requiere que ser un número'\n        });\n        if (state.speed < 0) return setError({\n          ...error,\n          speed: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          speed: ''\n        });\n      case 'height':\n        if (isNaN(parseInt(state.height))) return setError({\n          ...error,\n          height: 'Requiere que ser un número'\n        });\n        if (state.height < 0) return setError({\n          ...error,\n          height: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          height: ''\n        });\n      case 'weight':\n        if (isNaN(parseInt(state.weight))) return setError({\n          ...error,\n          weight: 'Requiere que ser un número'\n        });\n        if (state.weight < 0) return setError({\n          ...error,\n          weight: 'Se requiere numero positivo'\n        });else return setError({\n          ...error,\n          weight: ''\n        });\n      case 'image':\n        const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n        if (state.image === '') {\n          return setError({\n            ...error,\n            image: 'La URL de la imagen es requerida'\n          });\n        }\n        if (!urlRegex.test(state.image)) {\n          return setError({\n            ...error,\n            image: 'URL inválida'\n          });\n        } else {\n          return setError({\n            ...error,\n            image: ''\n          });\n        }\n        ;\n      case 'types':\n        if (state.types.length > 1) setError({\n          ...error,\n          types: ''\n        });\n        break;\n      default:\n        break;\n    }\n  };\n  const handleChange = event => {\n    event.preventDefault();\n    if (event.target.name === \"types\") {\n      if (state.types.length > 1) setErrors({\n        ...errors,\n        types: \"Select max two types\"\n      });else if (state.types.includes(event.target.value)) return;\n      setState({\n        ...state,\n        [event.target.name]: [...state[event.target.name], event.target.value]\n      });\n      return;\n    }\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n    validation({\n      ...state,\n      [event.target.name]: event.target.value\n    }, event.target.name);\n  };\n\n  // const disableButton = () => {\n  //     for (let error in errors) {\n  //       if (errors[error] !== \"\") return true;\n  //     }\n  // }\n\n  const removeTipo = event => {\n    // const value = document.getElementById(event.target.name).value\n    setState({\n      ...state,\n      [event.target.name]: [...state[event.target.name].filter(x => x !== event.target.id)]\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postPokemon(state));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form_general\",\n    children: [console.log(errors), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"pokemon_form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"name\",\n        placeholder: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"text\",\n        name: \"image\",\n        placeholder: \"image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"hp\",\n        placeholder: \"hp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.hp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"attack\",\n        placeholder: \"Attack\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.attack\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"defense\",\n        placeholder: \"Defense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.defense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"speed\",\n        placeholder: \"Speed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.speed\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"height\",\n        placeholder: \"Height\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange,\n        type: \"number\",\n        name: \"weight\",\n        placeholder: \"Weight\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: errors.weight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"type_options\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Types: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleChange,\n          name: \"types\",\n          id: \"\",\n          children: types === null || types === void 0 ? void 0 : types.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo,\n            children: tipo\n          }, tipo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 17\n        }, this), state.types.map((tipo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"types\",\n            children: tipo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: tipo,\n            type: \"button\",\n            name: \"types\",\n            onClick: removeTipo,\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 27\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleChange,\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        className: \"linktohome\",\n        to: '/homePage',\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"button\",\n          className: \"button_back\",\n          children: \"  Back to home  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"FA9dU3Zgchq37QDPcbtFxxZ7kqk=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useState","Link","useDispatch","postPokemon","axios","jsxDEV","_jsxDEV","Form","_s","types","setTypes","get","then","data","dispatch","state","setState","name","image","hp","attack","defense","speed","height","weight","console","log","errors","setErrors","validate","fieldName","setError","error","length","isNaN","parseInt","urlRegex","test","handleChange","event","preventDefault","target","includes","value","validation","removeTipo","filter","x","id","handleSubmit","className","children","onSubmit","onChange","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","tipo","index","onClick","to","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './Form.css'\nimport { Link } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport { postPokemon } from '../../Redux/actions'\nimport axios from 'axios'\n\nconst Form = () => {\n    const [types, setTypes] = useState([])\n\n    useEffect(()=>{\n        axios.get(`http://localhost:3001/types/`)\n        .then(({ data }) => {\n        setTypes(data);\n          });\n      },[])\n\n    const dispatch = useDispatch()\n\n    const [state, setState] = useState({\n        name: \"\",\n        image: \"\",\n        hp: \"\",\n        attack: \"\",\n        defense: \"\",\n        speed: \"\",\n        height: \"\",\n        weight: \"\",\n        types: []\n    })\n    console.log(state);\n\n    const [errors, setErrors] = useState({\n        name: \"\",\n        image: \"\",\n        hp: \"\",\n        attack: \"\",\n        defense: \"\",\n        speed: \"\",\n        height: \"\",\n        weight: \"\",\n        types: \"\"  \n    })\n    \n    // const validation = (state, name) => {\n    //     if(name === \"name\"){\n    //         if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n    //         else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n    //         else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n    //         else setErrors({...errors, name: ''})\n\n    //     }\n    //     if(name === \"image\"){\n    //         const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n    //         if (state.image === '') {\n    //           return setErrors({ ...errors, image: 'The image URL is required' });\n    //         }\n    //         if(!urlRegex.test(state.image)){\n    //           return setErrors({...errors, image: 'URL inválida'})\n    //         } else {\n    //           return setErrors({ ...errors, image: '' });\n    //         };\n\n    //     }\n    //     if(name === \"hp\"){\n    //         if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n    //         else setErrors({...errors, hp: ''})\n    //     }\n    //     if(name === \"attack\"){\n    //         if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n    //         else setErrors({...errors, attack: ''})\n    //     }\n    //     if(name === \"defense\"){\n    //         if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n    //         else setErrors({...errors, defense: ''})\n    //     }\n    //     if(name === \"speed\"){\n    //         if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n    //         else setErrors({...errors, speed: ''})\n    //     }\n    //     if(name === \"height\"){\n    //         if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n    //         else setErrors({...errors, height : ''})\n    //     }\n    //     if(name === \"weight\"){\n    //         if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n    //         else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n    //         else setErrors({...errors, weight : ''})\n    //     }\n    // }\n\n    const validate = (state, fieldName) => {\n        switch (fieldName) {\n          case 'name':\n            if (state.name === '') {\n              return setError({ ...error, name: 'El nombre es requerido' });\n            }\n            if(state.name.length < 5 || state.name.length > 30) return setError({ ...error, name: 'El nombre requiere entre 5 a 30 carácteres' });\n            else {\n              return setError({ ...error, name: '' });\n            };\n    \n          case 'hp':\n            if(isNaN(parseInt(state.hp))) return setError({...error, hp: 'Requiere que ser un número'});\n            if(state.hp < 0) return setError({...error, hp: 'Se requiere numero positivo'});\n            else return setError({...error, hp: ''});\n          case 'attack':\n            if(isNaN(parseInt(state.attack))) return setError({...error, attack: 'Requiere que ser un número'});\n            if(state.attack < 0) return setError({...error, attack: 'Se requiere numero positivo'});\n            else return setError({...error, attack: ''});\n          case 'defense':\n            if(isNaN(parseInt(state.defense))) return setError({...error, defense: 'Requiere que ser un número'});\n            if(state.defense < 0) return setError({...error, defense: 'Se requiere numero positivo'});\n            else return setError({...error, defense: ''});\n          case 'speed':\n            if(isNaN(parseInt(state.speed))) return setError({...error, speed: 'Requiere que ser un número'});\n            if(state.speed < 0) return setError({...error, speed: 'Se requiere numero positivo'});\n            else return setError({...error, speed: ''});\n            case 'height':\n              if(isNaN(parseInt(state.height))) return setError({...error, height: 'Requiere que ser un número'});\n              if(state.height < 0) return setError({...error, height: 'Se requiere numero positivo'});\n              else return setError({...error, height: ''});    \n          case 'weight':\n            if(isNaN(parseInt(state.weight))) return setError({...error, weight: 'Requiere que ser un número'});\n            if(state.weight < 0) return setError({...error, weight: 'Se requiere numero positivo'});\n            else return setError({...error, weight: ''});\n    \n          case 'image':\n            const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n            if (state.image === '') {\n              return setError({ ...error, image: 'La URL de la imagen es requerida' });\n            }\n            if(!urlRegex.test(state.image)){\n              return setError({...error, image: 'URL inválida'})\n            } else {\n              return setError({ ...error, image: '' });\n            };\n          case 'types':\n              if(state.types.length > 1) setError({...error, types: ''});\n                break\n    \n          default:\n            break;\n        }\n      }\n\n\n\n    const handleChange = (event) => {\n        event.preventDefault()\n        \n        if(event.target.name === \"types\"){\n            if(state.types.length > 1) setErrors({...errors, types: \"Select max two types\"})\n            else if(state.types.includes(event.target.value)) return\n            setState({\n                ...state,\n                [event.target.name]: [...state[event.target.name], event.target.value]\n            }) \n            return \n        }\n\n        setState({\n            ...state,\n            [event.target.name]: event.target.value\n        })\n        validation({\n            ...state,\n            [event.target.name]: event.target.value, \n        }, event.target.name)\n    }\n    \n    // const disableButton = () => {\n    //     for (let error in errors) {\n    //       if (errors[error] !== \"\") return true;\n    //     }\n    // }\n      \n    \n    const removeTipo = (event) => {\n        // const value = document.getElementById(event.target.name).value\n        setState({\n            ...state,\n            [event.target.name]: [...state[event.target.name].filter(x => x!== event.target.id)]\n        })\n    }\n    \n    const handleSubmit = (event) => {\n        event.preventDefault(); \n        dispatch(postPokemon(state))\n    }\n    \n\n    return (\n        <div className='form_general'>\n            {console.log(errors)}\n        <form className='pokemon_form' onSubmit={handleSubmit} >\n            <input onChange={handleChange} type=\"text\" name='name' placeholder='Name'/>\n            <span>{errors.name}</span>\n            <input onChange={handleChange} type=\"text\" name='image' placeholder='image'/>\n            <input onChange={handleChange} type=\"number\" name='hp' placeholder='hp'/>\n            <span>{errors.hp}</span>\n            <input onChange={handleChange} type=\"number\" name='attack' placeholder='Attack'/>\n            <span>{errors.attack}</span>\n            <input onChange={handleChange} type=\"number\" name='defense' placeholder='Defense'/>\n            <span>{errors.defense}</span>\n            <input onChange={handleChange} type=\"number\" name='speed' placeholder='Speed'/>\n            <span>{errors.speed}</span>\n            <input onChange={handleChange} type=\"number\" name='height' placeholder='Height'/>\n            <span>{errors.height}</span>\n            <input onChange={handleChange} type=\"number\" name='weight' placeholder='Weight'/>\n            <span>{errors.weight}</span>\n                <div className='type_options'>\n                <label>Types: </label>\n                <select onChange={handleChange} name=\"types\" id=\"\">\n                {types?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n                </select>\n                    {\n                        state.types.map((tipo, index) => (\n                          <div key={index}>\n                            <span id={\"types\"}>{tipo}</span>\n                            <button id={tipo} type='button' name=\"types\" onClick={removeTipo}>X</button>\n                          </div>\n                        ))\n                    }\n\n                <button onClick={handleChange} type='submit'>Submit</button>\n\n            </div>\n\n         <Link className='linktohome' to={'/homePage'}>\n            <button id='button' className='button_back'>  Back to home  </button> \n         </Link>\n        </form>\n    </div> \n  )\n}\n\nexport default Form"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAI;IACVK,KAAK,CAACO,GAAG,CAAE,8BAA6B,CAAC,CACxCC,IAAI,CAAC,CAAC;MAAEC;IAAK,CAAC,KAAK;MACpBH,QAAQ,CAACG,IAAI,CAAC;IACZ,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEP,MAAMC,QAAQ,GAAGZ,WAAW,CAAC,CAAC;EAE9B,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC;IAC/BiB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,EAAE,EAAE,EAAE;IACNC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVf,KAAK,EAAE;EACX,CAAC,CAAC;EACFgB,OAAO,CAACC,GAAG,CAACX,KAAK,CAAC;EAElB,MAAM,CAACY,MAAM,EAAEC,SAAS,CAAC,GAAG5B,QAAQ,CAAC;IACjCiB,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,EAAE,EAAE,EAAE;IACNC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,EAAE;IACXC,KAAK,EAAE,EAAE;IACTC,MAAM,EAAE,EAAE;IACVC,MAAM,EAAE,EAAE;IACVf,KAAK,EAAE;EACX,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMoB,QAAQ,GAAGA,CAACd,KAAK,EAAEe,SAAS,KAAK;IACnC,QAAQA,SAAS;MACf,KAAK,MAAM;QACT,IAAIf,KAAK,CAACE,IAAI,KAAK,EAAE,EAAE;UACrB,OAAOc,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEf,IAAI,EAAE;UAAyB,CAAC,CAAC;QAC/D;QACA,IAAGF,KAAK,CAACE,IAAI,CAACgB,MAAM,GAAG,CAAC,IAAIlB,KAAK,CAACE,IAAI,CAACgB,MAAM,GAAG,EAAE,EAAE,OAAOF,QAAQ,CAAC;UAAE,GAAGC,KAAK;UAAEf,IAAI,EAAE;QAA6C,CAAC,CAAC,CAAC,KACjI;UACH,OAAOc,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEf,IAAI,EAAE;UAAG,CAAC,CAAC;QACzC;QAAC;MAEH,KAAK,IAAI;QACP,IAAGiB,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACI,EAAE,CAAC,CAAC,EAAE,OAAOY,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEb,EAAE,EAAE;QAA4B,CAAC,CAAC;QAC3F,IAAGJ,KAAK,CAACI,EAAE,GAAG,CAAC,EAAE,OAAOY,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEb,EAAE,EAAE;QAA6B,CAAC,CAAC,CAAC,KAC3E,OAAOY,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEb,EAAE,EAAE;QAAE,CAAC,CAAC;MAC1C,KAAK,QAAQ;QACX,IAAGe,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACK,MAAM,CAAC,CAAC,EAAE,OAAOW,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEZ,MAAM,EAAE;QAA4B,CAAC,CAAC;QACnG,IAAGL,KAAK,CAACK,MAAM,GAAG,CAAC,EAAE,OAAOW,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEZ,MAAM,EAAE;QAA6B,CAAC,CAAC,CAAC,KACnF,OAAOW,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEZ,MAAM,EAAE;QAAE,CAAC,CAAC;MAC9C,KAAK,SAAS;QACZ,IAAGc,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACM,OAAO,CAAC,CAAC,EAAE,OAAOU,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEX,OAAO,EAAE;QAA4B,CAAC,CAAC;QACrG,IAAGN,KAAK,CAACM,OAAO,GAAG,CAAC,EAAE,OAAOU,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEX,OAAO,EAAE;QAA6B,CAAC,CAAC,CAAC,KACrF,OAAOU,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEX,OAAO,EAAE;QAAE,CAAC,CAAC;MAC/C,KAAK,OAAO;QACV,IAAGa,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACO,KAAK,CAAC,CAAC,EAAE,OAAOS,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEV,KAAK,EAAE;QAA4B,CAAC,CAAC;QACjG,IAAGP,KAAK,CAACO,KAAK,GAAG,CAAC,EAAE,OAAOS,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEV,KAAK,EAAE;QAA6B,CAAC,CAAC,CAAC,KACjF,OAAOS,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEV,KAAK,EAAE;QAAE,CAAC,CAAC;MAC3C,KAAK,QAAQ;QACX,IAAGY,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACQ,MAAM,CAAC,CAAC,EAAE,OAAOQ,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAET,MAAM,EAAE;QAA4B,CAAC,CAAC;QACnG,IAAGR,KAAK,CAACQ,MAAM,GAAG,CAAC,EAAE,OAAOQ,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAET,MAAM,EAAE;QAA6B,CAAC,CAAC,CAAC,KACnF,OAAOQ,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAET,MAAM,EAAE;QAAE,CAAC,CAAC;MAChD,KAAK,QAAQ;QACX,IAAGW,KAAK,CAACC,QAAQ,CAACpB,KAAK,CAACS,MAAM,CAAC,CAAC,EAAE,OAAOO,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAER,MAAM,EAAE;QAA4B,CAAC,CAAC;QACnG,IAAGT,KAAK,CAACS,MAAM,GAAG,CAAC,EAAE,OAAOO,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAER,MAAM,EAAE;QAA6B,CAAC,CAAC,CAAC,KACnF,OAAOO,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAER,MAAM,EAAE;QAAE,CAAC,CAAC;MAE9C,KAAK,OAAO;QACV,MAAMY,QAAQ,GAAG,qEAAqE;QACtF,IAAIrB,KAAK,CAACG,KAAK,KAAK,EAAE,EAAE;UACtB,OAAOa,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEd,KAAK,EAAE;UAAmC,CAAC,CAAC;QAC1E;QACA,IAAG,CAACkB,QAAQ,CAACC,IAAI,CAACtB,KAAK,CAACG,KAAK,CAAC,EAAC;UAC7B,OAAOa,QAAQ,CAAC;YAAC,GAAGC,KAAK;YAAEd,KAAK,EAAE;UAAc,CAAC,CAAC;QACpD,CAAC,MAAM;UACL,OAAOa,QAAQ,CAAC;YAAE,GAAGC,KAAK;YAAEd,KAAK,EAAE;UAAG,CAAC,CAAC;QAC1C;QAAC;MACH,KAAK,OAAO;QACR,IAAGH,KAAK,CAACN,KAAK,CAACwB,MAAM,GAAG,CAAC,EAAEF,QAAQ,CAAC;UAAC,GAAGC,KAAK;UAAEvB,KAAK,EAAE;QAAE,CAAC,CAAC;QACxD;MAEN;QACE;IACJ;EACF,CAAC;EAIH,MAAM6B,YAAY,GAAIC,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAGD,KAAK,CAACE,MAAM,CAACxB,IAAI,KAAK,OAAO,EAAC;MAC7B,IAAGF,KAAK,CAACN,KAAK,CAACwB,MAAM,GAAG,CAAC,EAAEL,SAAS,CAAC;QAAC,GAAGD,MAAM;QAAElB,KAAK,EAAE;MAAsB,CAAC,CAAC,MAC3E,IAAGM,KAAK,CAACN,KAAK,CAACiC,QAAQ,CAACH,KAAK,CAACE,MAAM,CAACE,KAAK,CAAC,EAAE;MAClD3B,QAAQ,CAAC;QACL,GAAGD,KAAK;QACR,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,GAAG,CAAC,GAAGF,KAAK,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,CAAC,EAAEsB,KAAK,CAACE,MAAM,CAACE,KAAK;MACzE,CAAC,CAAC;MACF;IACJ;IAEA3B,QAAQ,CAAC;MACL,GAAGD,KAAK;MACR,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,GAAGsB,KAAK,CAACE,MAAM,CAACE;IACtC,CAAC,CAAC;IACFC,UAAU,CAAC;MACP,GAAG7B,KAAK;MACR,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,GAAGsB,KAAK,CAACE,MAAM,CAACE;IACtC,CAAC,EAAEJ,KAAK,CAACE,MAAM,CAACxB,IAAI,CAAC;EACzB,CAAC;;EAED;EACA;EACA;EACA;EACA;;EAGA,MAAM4B,UAAU,GAAIN,KAAK,IAAK;IAC1B;IACAvB,QAAQ,CAAC;MACL,GAAGD,KAAK;MACR,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,GAAG,CAAC,GAAGF,KAAK,CAACwB,KAAK,CAACE,MAAM,CAACxB,IAAI,CAAC,CAAC6B,MAAM,CAACC,CAAC,IAAIA,CAAC,KAAIR,KAAK,CAACE,MAAM,CAACO,EAAE,CAAC;IACvF,CAAC,CAAC;EACN,CAAC;EAED,MAAMC,YAAY,GAAIV,KAAK,IAAK;IAC5BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB1B,QAAQ,CAACX,WAAW,CAACY,KAAK,CAAC,CAAC;EAChC,CAAC;EAGD,oBACIT,OAAA;IAAK4C,SAAS,EAAC,cAAc;IAAAC,QAAA,GACxB1B,OAAO,CAACC,GAAG,CAACC,MAAM,CAAC,eACxBrB,OAAA;MAAM4C,SAAS,EAAC,cAAc;MAACE,QAAQ,EAAEH,YAAa;MAAAE,QAAA,gBAClD7C,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,MAAM;QAACrC,IAAI,EAAC,MAAM;QAACsC,WAAW,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC3ErD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACV;MAAI;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1BrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,MAAM;QAACrC,IAAI,EAAC,OAAO;QAACsC,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC7ErD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,IAAI;QAACsC,WAAW,EAAC;MAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzErD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACR;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,QAAQ;QAACsC,WAAW,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFrD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACP;MAAM;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,SAAS;QAACsC,WAAW,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACnFrD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACN;MAAO;QAAAmC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7BrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,OAAO;QAACsC,WAAW,EAAC;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/ErD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACL;MAAK;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3BrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,QAAQ;QAACsC,WAAW,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFrD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACJ;MAAM;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BrD,OAAA;QAAO+C,QAAQ,EAAEf,YAAa;QAACgB,IAAI,EAAC,QAAQ;QAACrC,IAAI,EAAC,QAAQ;QAACsC,WAAW,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACjFrD,OAAA;QAAA6C,QAAA,EAAOxB,MAAM,CAACH;MAAM;QAAAgC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACxBrD,OAAA;QAAK4C,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC7B7C,OAAA;UAAA6C,QAAA,EAAO;QAAO;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACtBrD,OAAA;UAAQ+C,QAAQ,EAAEf,YAAa;UAACrB,IAAI,EAAC,OAAO;UAAC+B,EAAE,EAAC,EAAE;UAAAG,QAAA,EACjD1C,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEmD,GAAG,CAACC,IAAI,iBAAIvD,OAAA;YAAmBqC,KAAK,EAAEkB,IAAK;YAAAV,QAAA,EAAEU;UAAI,GAAxBA,IAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5D,CAAC,EAED5C,KAAK,CAACN,KAAK,CAACmD,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC1BxD,OAAA;UAAA6C,QAAA,gBACE7C,OAAA;YAAM0C,EAAE,EAAE,OAAQ;YAAAG,QAAA,EAAEU;UAAI;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAChCrD,OAAA;YAAQ0C,EAAE,EAAEa,IAAK;YAACP,IAAI,EAAC,QAAQ;YAACrC,IAAI,EAAC,OAAO;YAAC8C,OAAO,EAAElB,UAAW;YAAAM,QAAA,EAAC;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA,GAFpEG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGV,CACN,CAAC,eAGVrD,OAAA;UAAQyD,OAAO,EAAEzB,YAAa;UAACgB,IAAI,EAAC,QAAQ;UAAAH,QAAA,EAAC;QAAM;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAE3D,CAAC,eAETrD,OAAA,CAACL,IAAI;QAACiD,SAAS,EAAC,YAAY;QAACc,EAAE,EAAE,WAAY;QAAAb,QAAA,eAC1C7C,OAAA;UAAQ0C,EAAE,EAAC,QAAQ;UAACE,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAgB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAAnD,EAAA,CAzOKD,IAAI;EAAA,QAUWL,WAAW;AAAA;AAAA+D,EAAA,GAV1B1D,IAAI;AA2OV,eAAeA,IAAI;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}