{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import './Form.css'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { postPokemon } from '../../Redux/actions'\n// import axios from 'axios'\n\n// const Form = () => {\n//     const [types, setTypes] = useState([])\n//     // const types = useSelector(state=> state.types)\n\n//     useEffect(()=>{\n//         axios.get(`http://localhost:3001/types/`)\n//         .then(({ data }) => {\n//         setTypes(data);\n//           });\n//       },[])\n\n//     const dispatch = useDispatch()\n\n//     const [state, setState] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: []\n//     })\n//     console.log(state);\n\n//     const [errors, setErrors] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: \"\"  \n//     })\n\n//     const validation = (state, name) => {\n//         if(name === \"name\"){\n//             if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n//             else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n//             else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n//             else setErrors({...errors, name: ''})\n\n//         }\n//         if(name === \"image\"){\n//             const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n//             if (state.image === '') {\n//               return setErrors({ ...errors, image: 'The image URL is required' });\n//             }\n//             if(!urlRegex.test(state.image)){\n//               return setErrors({...errors, image: 'URL inválida'})\n//             } else {\n//               return setErrors({ ...errors, image: '' });\n//             };\n\n//         }\n//         if(name === \"hp\"){\n//             if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n//             else setErrors({...errors, hp: ''})\n//         }\n//         if(name === \"attack\"){\n//             if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n//             else setErrors({...errors, attack: ''})\n//         }\n//         if(name === \"defense\"){\n//             if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n//             else setErrors({...errors, defense: ''})\n//         }\n//         if(name === \"speed\"){\n//             if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n//             else setErrors({...errors, speed: ''})\n//         }\n//         if(name === \"height\"){\n//             if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n//             else setErrors({...errors, height : ''})\n//         }\n//         if(name === \"weight\"){\n//             if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n//             else setErrors({...errors, weight : ''})\n//         }\n//     }\n\n//     const handleChange = (event) => {\n//         event.preventDefault()\n\n//         if(event.target.name === \"types\"){\n//             if(state.types.length > 1){ setErrors({...errors, types: \"Select max two types\"})\n//             // return\n//         }\n//             else if(state.types.includes(event.target.value)) return\n//             setState({\n//                 ...state,\n//                 [event.target.name]: [...state[event.target.name], event.target.value]\n//             }) \n//             return \n//         }\n\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.value\n//         })\n//         validation({\n//             ...state,\n//             [event.target.name]: event.target.value, \n//         }, event.target.name)\n//     }\n\n// const disableButton = ()=>{\n//     let disabled = true;\n//     for (let error in errors) {\n//       if (errors[error] === \"\" || errors[error].length === 0) disabled = false;\n//       else {\n//         disabled = true;\n//         break;\n//       }\n//     }\n//     return disabled;\n//   }\n\n//   const handleSelect = (event) => {\n//     event.preventDefault();\n//     const selectedValue = event.target.value;\n\n//     if (!state.types.includes(selectedValue)) {\n//       setErrors({...errors, types: ''})\n//       setState({...state, types: [...state.types, selectedValue]})\n//     } else {\n//       // Muestra un mensaje de error o realiza alguna acción\n//       alert('Este tipo ya ha sido seleccionado.');\n//     }\n//   };\n\n//     const removeTipo = (event) => {\n//         // const value = document.getElementById(event.target.name).value\n//         setState({\n//             ...state,\n//             [event.target.name]: [...state[event.target.name].filter(x => x!== event.target.id)]\n//         })\n//     }\n\n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//         dispatch(postPokemon(state));\n//         setState({\n//           name: '',\n//           hp: '',\n//           attack: '',\n//           defense: '',\n//           speed: '',\n//           height: '',\n//           weight: '',\n//           image: '',\n//           types: []\n//         });\n//       }\n\n//     return (\n//         <div className='form_general'>\n//             {console.log(errors)}\n//         <form className='pokemon_form' onSubmit={handleSubmit} >\n//             <input onChange={handleChange} type=\"text\" name='name' placeholder='Name'/>\n//             <span>{errors.name}</span>\n//             <input onChange={handleChange} type=\"text\" name='image' placeholder='image'/>\n//             <input onChange={handleChange} type=\"number\" name='hp' placeholder='hp'/>\n//             <span>{errors.hp}</span>\n//             <input onChange={handleChange} type=\"number\" name='attack' placeholder='Attack'/>\n//             <span>{errors.attack}</span>\n//             <input onChange={handleChange} type=\"number\" name='defense' placeholder='Defense'/>\n//             <span>{errors.defense}</span>\n//             <input onChange={handleChange} type=\"number\" name='speed' placeholder='Speed'/>\n//             <span>{errors.speed}</span>\n//             <input onChange={handleChange} type=\"number\" name='height' placeholder='Height'/>\n//             <span>{errors.height}</span>\n//             <input onChange={handleChange} type=\"number\" name='weight' placeholder='Weight'/>\n//             <span>{errors.weight}</span>\n//                 <div className='type_options'>\n//                 <label>Types: </label>\n//                 <select onChange={handleChange} name=\"types\" id=\"\">\n//                 {types?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//                 </select>\n//                     {\n//                         state.types.map((tipo, index) => (\n//                           <div key={index}>\n//                             <span >{tipo}</span>\n//                             <button id={tipo} type='button' name=\"types\" onClick={removeTipo}>X</button>\n//                           </div>\n//                         ))\n//                     }\n\n//                 <button onClick={handleChange} disabled={disableButton()} type='submit'>Submit</button>\n\n//             </div>\n\n//          <Link className='linktohome' to={'/homePage'}>\n//             <button id='button' className='button_back'>  Back to home  </button> \n//          </Link>\n//         </form>\n//     </div> \n//   )\n// }\n\n// export default Form\n\nimport React, { useEffect } from 'react';\nimport './Form.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { postPokemon } from '../../Redux/actions';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Form() {\n  _s();\n  const dispatch = useDispatch();\n\n  // State Global types\n  const [types, setTypes] = useState([]);\n  // const types = useSelector(state=> state.types)\n\n  useEffect(() => {\n    axios.get(`http://localhost:3001/types/`).then(({\n      data\n    }) => {\n      setTypes(data);\n    });\n  }, []);\n\n  // State inputs\n  const [state, setState] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: '',\n    types: []\n  });\n\n  // State Errors\n  const [error, setError] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    weight: '',\n    height: '',\n    image: '',\n    types: ''\n  });\n\n  //   Validaciones de inputs\n  const validation = (state, name) => {\n    if (name === \"name\") {\n      if (state.name === '') setErrors({\n        ...errors,\n        name: \"Name is require\"\n      });else if (state.name.length >= 30) setErrors({\n        ...errors,\n        name: \"Name can not be that length\"\n      });else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({\n        ...errors,\n        name: \"Name cannot contain special characters\"\n      });else setErrors({\n        ...errors,\n        name: ''\n      });\n    }\n    if (name === \"image\") {\n      const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n      if (state.image === '') {\n        return setErrors({\n          ...errors,\n          image: 'The image URL is required'\n        });\n      }\n      if (!urlRegex.test(state.image)) {\n        return setErrors({\n          ...errors,\n          image: 'URL inválida'\n        });\n      } else {\n        return setErrors({\n          ...errors,\n          image: ''\n        });\n      }\n      ;\n    }\n    if (name === \"hp\") {\n      if (isNaN(parseInt(state.hp))) setErrors({\n        ...errors,\n        hp: \"hp must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.hp)) setErrors({\n        ...errors,\n        hp: \"Life must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        hp: ''\n      });\n    }\n    if (name === \"attack\") {\n      if (isNaN(parseInt(state.attack))) setErrors({\n        ...errors,\n        attack: \"Attack must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.attack)) setErrors({\n        ...errors,\n        attack: \"Attack must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        attack: ''\n      });\n    }\n    if (name === \"defense\") {\n      if (isNaN(parseInt(state.defense))) setErrors({\n        ...errors,\n        defense: \"Defense must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.defense)) setErrors({\n        ...errors,\n        defense: \"Defense must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        defense: ''\n      });\n    }\n    if (name === \"speed\") {\n      if (isNaN(parseInt(state.speed))) setErrors({\n        ...errors,\n        speed: \"Speed must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.speed)) setErrors({\n        ...errors,\n        speed: \"Speed must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        speed: ''\n      });\n    }\n    if (name === \"height\") {\n      if (isNaN(parseInt(state.height))) setErrors({\n        ...errors,\n        height: \"Height must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.height)) setErrors({\n        ...errors,\n        height: \"Height must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        height: ''\n      });\n    }\n    if (name === \"weight\") {\n      if (isNaN(parseInt(state.weight))) setErrors({\n        ...errors,\n        weight: \"Weight must be a number\"\n      });else if (!/^[0-9]{1,3}$/.test(state.weight)) setErrors({\n        ...errors,\n        weight: \"Weight must be between 0-999\"\n      });else setErrors({\n        ...errors,\n        weight: ''\n      });\n    }\n  };\n\n  // Disabled Button\n  const disableFunction = () => {\n    let disabled = true;\n    for (let err in error) {\n      if (error[err] === \"\" || error[err].length === 0) disabled = false;else {\n        disabled = true;\n        break;\n      }\n    }\n    return disabled;\n  };\n\n  // Handle Inputs\n  const handleChange = event => {\n    setState({\n      ...state,\n      [event.target.name]: event.target.value\n    });\n    validation({\n      ...state,\n      [event.target.name]: event.target.value\n    }, event.target.name);\n  };\n\n  // Handle Post\n  const handleSubmit = event => {\n    event.preventDefault();\n    dispatch(postPokemon(state));\n    setState({\n      name: '',\n      hp: '',\n      attack: '',\n      defense: '',\n      speed: '',\n      height: '',\n      weight: '',\n      image: '',\n      types: []\n    });\n  };\n\n  // Handle Types\n  const handleSelect = e => {\n    e.preventDefault();\n    const selectedValue = e.target.value;\n    if (!state.types.includes(selectedValue)) {\n      setError({\n        ...error,\n        types: ''\n      });\n      // Agrega el valor seleccionado al arreglo\n      setState({\n        ...state,\n        types: [...state.types, selectedValue]\n      });\n    } else {\n      // Muestra un mensaje de error o realiza alguna acción\n      alert('Este tipo ya ha sido seleccionado.');\n    }\n  };\n\n  // Handle Delete Types\n  const handleDelete = e => {\n    setState({\n      ...state,\n      // estado anterior\n      types: state.types.filter(t => t !== e)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"inputs\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading\",\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input\",\n            placeholder: \"Name\",\n            name: \"name\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel \",\n            children: error.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Hp\",\n            name: \"hp\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.hp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Attack\",\n            name: \"attack\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.attack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Defense\",\n            name: \"defense\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.defense\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Speed\",\n            name: \"speed\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.speed\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Weight\",\n            name: \"weight\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"number\",\n            placeholder: \"Height\",\n            name: \"height\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.height\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputDiv\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            type: \"text\",\n            placeholder: \"URL imagen\",\n            value: state.image,\n            name: \"image\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"aleatorio\",\n          type: \"button\",\n          children: \"URL Aleatorio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 442,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"buttonDiv\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            disabled: disableFunction(),\n            className: \"\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"types\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"heading\",\n          children: \"Types\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 452,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"types\",\n          onChange: e => handleSelect(e),\n          className: \"selectType\",\n          disabled: state.types.length >= 2,\n          children: types.map((t, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: t.name,\n            children: t.name\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"fila\",\n          children: [state.types.map((e, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"divDelete\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"typeElegido\",\n              children: e\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 464,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"botonX\",\n              onClick: () => handleDelete(e),\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"errorLabel\",\n            children: error.types\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"pokemon\",\n          src: state.image,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 396,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"72UgqjUYH3RSQSgUBK8Uh5iQAf0=\", false, function () {\n  return [useDispatch];\n});\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","useState","postPokemon","axios","jsxDEV","_jsxDEV","Form","_s","dispatch","types","setTypes","get","then","data","state","setState","name","hp","attack","defense","speed","height","weight","image","error","setError","validation","setErrors","errors","length","test","urlRegex","isNaN","parseInt","disableFunction","disabled","err","handleChange","event","target","value","handleSubmit","preventDefault","handleSelect","e","selectedValue","includes","alert","handleDelete","filter","t","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","map","index","onClick","src","alt","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/Form/Form.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\n// import './Form.css'\n// import { Link } from 'react-router-dom'\n// import { useDispatch, useSelector } from 'react-redux'\n// import { postPokemon } from '../../Redux/actions'\n// import axios from 'axios'\n\n// const Form = () => {\n//     const [types, setTypes] = useState([])\n//     // const types = useSelector(state=> state.types)\n\n//     useEffect(()=>{\n//         axios.get(`http://localhost:3001/types/`)\n//         .then(({ data }) => {\n//         setTypes(data);\n//           });\n//       },[])\n\n//     const dispatch = useDispatch()\n\n//     const [state, setState] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: []\n//     })\n//     console.log(state);\n\n//     const [errors, setErrors] = useState({\n//         name: \"\",\n//         image: \"\",\n//         hp: \"\",\n//         attack: \"\",\n//         defense: \"\",\n//         speed: \"\",\n//         height: \"\",\n//         weight: \"\",\n//         types: \"\"  \n//     })\n    \n//     const validation = (state, name) => {\n//         if(name === \"name\"){\n//             if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n//             else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n//             else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n//             else setErrors({...errors, name: ''})\n\n//         }\n//         if(name === \"image\"){\n//             const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n//             if (state.image === '') {\n//               return setErrors({ ...errors, image: 'The image URL is required' });\n//             }\n//             if(!urlRegex.test(state.image)){\n//               return setErrors({...errors, image: 'URL inválida'})\n//             } else {\n//               return setErrors({ ...errors, image: '' });\n//             };\n\n//         }\n//         if(name === \"hp\"){\n//             if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n//             else setErrors({...errors, hp: ''})\n//         }\n//         if(name === \"attack\"){\n//             if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n//             else setErrors({...errors, attack: ''})\n//         }\n//         if(name === \"defense\"){\n//             if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n//             else setErrors({...errors, defense: ''})\n//         }\n//         if(name === \"speed\"){\n//             if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n//             else setErrors({...errors, speed: ''})\n//         }\n//         if(name === \"height\"){\n//             if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n//             else setErrors({...errors, height : ''})\n//         }\n//         if(name === \"weight\"){\n//             if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n//             else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n//             else setErrors({...errors, weight : ''})\n//         }\n//     }\n\n\n\n//     const handleChange = (event) => {\n//         event.preventDefault()\n\n//         if(event.target.name === \"types\"){\n//             if(state.types.length > 1){ setErrors({...errors, types: \"Select max two types\"})\n//             // return\n//         }\n//             else if(state.types.includes(event.target.value)) return\n//             setState({\n//                 ...state,\n//                 [event.target.name]: [...state[event.target.name], event.target.value]\n//             }) \n//             return \n//         }\n\n//         setState({\n//             ...state,\n//             [event.target.name]: event.target.value\n//         })\n//         validation({\n//             ...state,\n//             [event.target.name]: event.target.value, \n//         }, event.target.name)\n//     }\n    \n// const disableButton = ()=>{\n//     let disabled = true;\n//     for (let error in errors) {\n//       if (errors[error] === \"\" || errors[error].length === 0) disabled = false;\n//       else {\n//         disabled = true;\n//         break;\n//       }\n//     }\n//     return disabled;\n//   }\n\n//   const handleSelect = (event) => {\n//     event.preventDefault();\n//     const selectedValue = event.target.value;\n\n//     if (!state.types.includes(selectedValue)) {\n//       setErrors({...errors, types: ''})\n//       setState({...state, types: [...state.types, selectedValue]})\n//     } else {\n//       // Muestra un mensaje de error o realiza alguna acción\n//       alert('Este tipo ya ha sido seleccionado.');\n//     }\n//   };\n      \n    \n//     const removeTipo = (event) => {\n//         // const value = document.getElementById(event.target.name).value\n//         setState({\n//             ...state,\n//             [event.target.name]: [...state[event.target.name].filter(x => x!== event.target.id)]\n//         })\n//     }\n    \n    \n//     const handleSubmit = (event)=>{\n//         event.preventDefault();\n//         dispatch(postPokemon(state));\n//         setState({\n//           name: '',\n//           hp: '',\n//           attack: '',\n//           defense: '',\n//           speed: '',\n//           height: '',\n//           weight: '',\n//           image: '',\n//           types: []\n//         });\n//       }\n\n//     return (\n//         <div className='form_general'>\n//             {console.log(errors)}\n//         <form className='pokemon_form' onSubmit={handleSubmit} >\n//             <input onChange={handleChange} type=\"text\" name='name' placeholder='Name'/>\n//             <span>{errors.name}</span>\n//             <input onChange={handleChange} type=\"text\" name='image' placeholder='image'/>\n//             <input onChange={handleChange} type=\"number\" name='hp' placeholder='hp'/>\n//             <span>{errors.hp}</span>\n//             <input onChange={handleChange} type=\"number\" name='attack' placeholder='Attack'/>\n//             <span>{errors.attack}</span>\n//             <input onChange={handleChange} type=\"number\" name='defense' placeholder='Defense'/>\n//             <span>{errors.defense}</span>\n//             <input onChange={handleChange} type=\"number\" name='speed' placeholder='Speed'/>\n//             <span>{errors.speed}</span>\n//             <input onChange={handleChange} type=\"number\" name='height' placeholder='Height'/>\n//             <span>{errors.height}</span>\n//             <input onChange={handleChange} type=\"number\" name='weight' placeholder='Weight'/>\n//             <span>{errors.weight}</span>\n//                 <div className='type_options'>\n//                 <label>Types: </label>\n//                 <select onChange={handleChange} name=\"types\" id=\"\">\n//                 {types?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//                 </select>\n//                     {\n//                         state.types.map((tipo, index) => (\n//                           <div key={index}>\n//                             <span >{tipo}</span>\n//                             <button id={tipo} type='button' name=\"types\" onClick={removeTipo}>X</button>\n//                           </div>\n//                         ))\n//                     }\n\n//                 <button onClick={handleChange} disabled={disableButton()} type='submit'>Submit</button>\n\n//             </div>\n\n//          <Link className='linktohome' to={'/homePage'}>\n//             <button id='button' className='button_back'>  Back to home  </button> \n//          </Link>\n//         </form>\n//     </div> \n//   )\n// }\n\n// export default Form\n\nimport React, { useEffect } from 'react'\nimport  './Form.css'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useState } from 'react'\nimport { postPokemon } from '../../Redux/actions'\nimport axios from 'axios'\n\nfunction Form() {\n\n\n\n  const dispatch = useDispatch();\n\n  // State Global types\n    const [types, setTypes] = useState([])\n    // const types = useSelector(state=> state.types)\n\n    useEffect(()=>{\n        axios.get(`http://localhost:3001/types/`)\n        .then(({ data }) => {\n        setTypes(data);\n          });\n      },[])\n\n  // State inputs\n  const [state, setState] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    height: '',\n    weight: '',\n    image: '',\n    types: []\n  })\n\n  // State Errors\n  const [error, setError] = useState({\n    name: '',\n    hp: '',\n    attack: '',\n    defense: '',\n    speed: '',\n    weight: '',\n    height: '',\n    image: '',\n    types: ''\n  })\n\n//   Validaciones de inputs\n      const validation = (state, name) => {\n        if(name === \"name\"){\n            if(state.name === '') setErrors({...errors, name:\"Name is require\"})\n            else if(state.name.length >= 30) setErrors({...errors, name:\"Name can not be that length\"})\n            else if (!/^[a-zA-Z\\s]+$/.test(state.name)) setErrors({ ...errors, name: \"Name cannot contain special characters\" })\n            else setErrors({...errors, name: ''})\n\n        }\n        if(name === \"image\"){\n            const urlRegex = /^(https?:\\/\\/)?([a-zA-Z0-9.-]+)(\\.[a-zA-Z]{2,})(:\\d{1,5})?(\\/\\S*)?$/;\n            if (state.image === '') {\n              return setErrors({ ...errors, image: 'The image URL is required' });\n            }\n            if(!urlRegex.test(state.image)){\n              return setErrors({...errors, image: 'URL inválida'})\n            } else {\n              return setErrors({ ...errors, image: '' });\n            };\n\n        }\n        if(name === \"hp\"){\n            if(isNaN(parseInt(state.hp))) setErrors({...errors, hp: \"hp must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.hp)) setErrors({...errors, hp: \"Life must be between 0-999\"})\n            else setErrors({...errors, hp: ''})\n        }\n        if(name === \"attack\"){\n            if(isNaN(parseInt(state.attack))) setErrors({...errors, attack: \"Attack must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.attack)) setErrors({...errors, attack: \"Attack must be between 0-999\"})\n            else setErrors({...errors, attack: ''})\n        }\n        if(name === \"defense\"){\n            if(isNaN(parseInt(state.defense))) setErrors({...errors, defense: \"Defense must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.defense)) setErrors({...errors, defense: \"Defense must be between 0-999\"})\n            else setErrors({...errors, defense: ''})\n        }\n        if(name === \"speed\"){\n            if(isNaN(parseInt(state.speed))) setErrors({...errors, speed: \"Speed must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.speed)) setErrors({...errors, speed: \"Speed must be between 0-999\"})\n            else setErrors({...errors, speed: ''})\n        }\n        if(name === \"height\"){\n            if(isNaN(parseInt(state.height))) setErrors({...errors, height: \"Height must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.height)) setErrors({...errors, height: \"Height must be between 0-999\"})\n            else setErrors({...errors, height : ''})\n        }\n        if(name === \"weight\"){\n            if(isNaN(parseInt(state.weight))) setErrors({...errors, weight: \"Weight must be a number\"})\n            else if(!/^[0-9]{1,3}$/.test(state.weight)) setErrors({...errors, weight: \"Weight must be between 0-999\"})\n            else setErrors({...errors, weight : ''})\n        }\n    }\n\n  // Disabled Button\n  const disableFunction = ()=>{\n    let disabled = true;\n    for (let err in error) {\n      if (error[err] === \"\" || error[err].length === 0) disabled = false;\n      else {\n        disabled = true;\n        break;\n      }\n    }\n    return disabled;\n  }\n\n  // Handle Inputs\n  const handleChange = (event)=>{\n    setState({\n      ...state,\n      [event.target.name] : event.target.value\n    });\n\n    validation({\n      ...state,\n      [event.target.name] : event.target.value\n    }, event.target.name)\n  }\n\n  // Handle Post\n  const handleSubmit = (event)=>{\n    event.preventDefault();\n    dispatch(postPokemon(state));\n    setState({\n      name: '',\n      hp: '',\n      attack: '',\n      defense: '',\n      speed: '',\n      height: '',\n      weight: '',\n      image: '',\n      types: []\n    });\n  }\n\n  // Handle Types\n  const handleSelect = (e) => {\n    e.preventDefault();\n    const selectedValue = e.target.value;\n\n    if (!state.types.includes(selectedValue)) {\n      setError({...error, types: ''})\n      // Agrega el valor seleccionado al arreglo\n      setState({...state, types: [...state.types, selectedValue]})\n    } else {\n      // Muestra un mensaje de error o realiza alguna acción\n      alert('Este tipo ya ha sido seleccionado.');\n    }\n  };\n\n  // Handle Delete Types\n  const handleDelete = (e) => {\n    setState({\n      ...state, // estado anterior\n      types: state.types.filter((t) => t !== e),\n    });\n  };\n\n\n  \n\n  return (\n    <div className=\"form\">\n\n      <form onSubmit={handleSubmit} className=\"inputs\">\n\n        <div className=\"card\">\n          <p className=\"heading\">Create</p>\n  \n          <div className=\"inputDiv\">\n          <input type=\"text\" className=\"input\" placeholder=\"Name\" name='name' onChange={handleChange} />\n          <label className=\"errorLabel \">{error.name}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Hp\" name='hp' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.hp}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Attack\" name='attack' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.attack}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Defense\" name='defense' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.defense}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Speed\" name='speed' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.speed}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Weight\" name='weight' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.weight}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"number\" placeholder=\"Height\" name='height' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.height}</label>\n          </div>\n\n          <div className=\"inputDiv\">\n          <input className=\"input\" type=\"text\" placeholder=\"URL imagen\" value={state.image}  name='image' onChange={handleChange}/>\n          <label className=\"errorLabel\">{error.image}</label>\n          </div>\n          <button className=\"aleatorio\" type='button'>URL Aleatorio</button>\n          \n          \n          <div className=\"buttonDiv\">\n            <button disabled={disableFunction()} className=\"\" type='submit'>Submit</button>\n          </div>\n        \n        </div>\n\n        <div className=\"types\">\n          <p className=\"heading\">Types</p>\n          <select name='types' onChange={(e) => handleSelect(e)} className=\"selectType\" disabled={state.types.length >= 2}>\n              {types.map((t, index) => (\n                  <option key={index} value={t.name}>\n                    {t.name}\n                  </option>\n              ))}\n          </select>\n\n          <div className=\"fila\">\n            {state.types.map((e, index) => (\n              <div className=\"divDelete\" key={index}>\n                <p className=\"typeElegido\" >\n                  {e}\n                </p>\n                <button className=\"botonX\" onClick={() => handleDelete(e)}>\n                  X\n                </button>\n              </div>\n            ))}\n\n            <label className=\"errorLabel\">{error.types}</label>\n          </div>\n\n          <img className=\"pokemon\" src={state.image} alt=\"\" />\n\n        </div>\n      </form>\n    </div>\n  )\n}\n\nexport default Form"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAQ,YAAY;AACpB,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,QAAQ,qBAAqB;AACjD,OAAOC,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}