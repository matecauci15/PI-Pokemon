{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\n// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// import styles from './HomePage.module.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByAttack, filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import getColorForType from '../../utils/colors'\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   // const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de pokemon ordenada\n\n//   const allTypes = useSelector(state => state.allTypes)\n\n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n\n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n\n//   function handleClick (event){\n//     event.preventDefault()\n//     dispatch(getPokemon())\n//   }\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n//     dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n//   }\n\n//   // funcion para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const {value} = event.target; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(value)); // llama a la accion para ordenar los pokemons\n//   };\n\n//   // filtrado por Origen\n//   const handleOriginFilter = (event)=>{\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByOrigin(value))\n// }\n\n//   // Filtrado por TYPE\n//   const handleTypeChange = (event) => {\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByType(value)); // llama a la accion para filtrar los pokemon por tipo\n//   };\n\n//   //Filtrado por Ataque\n//   const handlerFilterAtack = (event) => {\n//     event.preventDefault()\n//     const { value } = event.target;\n//     if (value === \"All\") {\n//       dispatch(getPokemon());\n//     } else {\n//       dispatch(filterByAttack(value));\n//     }\n//   }\n\n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }\n//   }\n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n//   const nextHandler = () => {\n//     // verificamos si estamos en la última pagina, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleClick={handleClick} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">Order</option>\n//         <option value=\"AA\">A-Z</option>\n//         <option value=\"ZA\">Z-A</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} >\n//         <option  value=\"All\">Types</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOriginFilter(event)}>\n//               <option value=\"All\">Created</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} name='attack' onChange={handlerFilterAtack} handleClearFilters={handleClearFilters}>\n//         <option value=\"All\">Attack</option>\n//         <option value=\"ascending\">Ascending (A-Z)</option>\n//         <option value=\"descending\">Descending (Z-A)</option>\n//       </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../Components/NavBar/NavBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByAttack, filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const allTypes = useSelector(state => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n  const [filters, setFilters] = useState({\n    type: 'All',\n    origin: 'All',\n    order: 'All'\n  });\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n  function handleClick(event) {\n    event.preventDefault();\n    dispatch(getPokemon());\n  }\n  function handleChange(event) {\n    event.preventDefault();\n    setSearchPokemon(event.target.value);\n  }\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (searchPokemon) {\n      dispatch(getPokemonByName(searchPokemon));\n    } else {\n      dispatch(getPokemon());\n    }\n  }\n  function handleClearSearch() {\n    setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n    dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n  }\n\n  useEffect(() => {\n    // Apply filters when filters or data change\n    const {\n      type,\n      origin,\n      order\n    } = filters;\n    let filteredPokemons = [...allPokemons];\n    if (type !== 'All') {\n      filteredPokemons = filteredPokemons.filter(pokemon => pokemon.types.includes(type));\n    }\n    if (origin !== 'All') {\n      filteredPokemons = filteredPokemons.filter(pokemon => {\n        return origin === 'created' ? pokemon.createdInDb : !pokemon.createdInDb;\n      });\n    }\n    if (order === 'AA') {\n      filteredPokemons.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (order === 'ZA') {\n      filteredPokemons.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    dispatch(getPokemonByName(searchPokemon, filteredPokemons));\n  }, [filters, allPokemons, searchPokemon, dispatch]);\n  function handleChange(event) {\n    setSearchPokemon(event.target.value);\n  }\n  const clearFilters = () => {\n    setSearchPokemon('');\n    setFilters({\n      type: 'All',\n      origin: 'All',\n      order: 'All'\n    });\n    dispatch(getPokemon());\n  };\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  useEffect(() => {\n    if (currentPokemons.length === 0) setCurrentPage(1);\n  }, [currentPokemons]);\n  const nextHandler = () => {\n    // verificamos si estamos en la última pagina, para no avanzar mas\n    if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n      return;\n    }\n    if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n    setCurrentPage(currentPage + 1);\n  };\n  const prevHandler = () => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        handleChange: handleChange,\n        handleClick: handleClick,\n        handleSubmit: handleSubmit,\n        handleClearSearch: handleClearSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setFilters({\n        ...filters,\n        order: e.target.value\n      }),\n      value: filters.order,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"Order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"AA\",\n        children: \"A-Z\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"ZA\",\n        children: \"Z-A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setFilters({\n        ...filters,\n        type: e.target.value\n      }),\n      value: filters.type,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), allTypes === null || allTypes === void 0 ? void 0 : allTypes.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: tipo,\n        children: tipo\n      }, tipo, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setFilters({\n        ...filters,\n        origin: e.target.value\n      }),\n      value: filters.origin,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"All\",\n        children: \"Created\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"created\",\n        children: \"DB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"api\",\n        children: \"API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: searchPokemon,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearFilters,\n      children: \"Clear Filters\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Cards, {\n      allPokemons: allPokemons\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination_container,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: prevHandler,\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        children: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: nextHandler,\n        disabled: indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 279,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"J/9274g81jY0dyvAodINx/1/3HE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["React","useEffect","useState","NavBar","useDispatch","useSelector","filterByAttack","filterByOrigin","filterByType","getPokemon","getPokemonByName","getTypes","orderByName","Cards","jsxDEV","_jsxDEV","HomePage","_s","dispatch","allPokemons","state","allTypes","searchPokemon","setSearchPokemon","filters","setFilters","type","origin","order","handleClick","event","preventDefault","handleChange","target","value","handleSubmit","handleClearSearch","filteredPokemons","filter","pokemon","types","includes","createdInDb","sort","a","b","name","localeCompare","clearFilters","currentPage","setCurrentPage","pokemonsPerPage","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","length","nextHandler","prevHandler","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","map","tipo","onClick","className","styles","pagination_container","pagination_button","disabled","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx"],"sourcesContent":["// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// import styles from './HomePage.module.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByAttack, filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import getColorForType from '../../utils/colors'\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   // const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de pokemon ordenada\n  \n//   const allTypes = useSelector(state => state.allTypes)\n  \n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n  \n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n  \n//   function handleClick (event){\n//     event.preventDefault()\n//     dispatch(getPokemon())\n//   }\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n//     dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n//   }\n\n  \n//   // funcion para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const {value} = event.target; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(value)); // llama a la accion para ordenar los pokemons\n//   };\n  \n//   // filtrado por Origen\n//   const handleOriginFilter = (event)=>{\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByOrigin(value))\n// }\n  \n//   // Filtrado por TYPE\n//   const handleTypeChange = (event) => {\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByType(value)); // llama a la accion para filtrar los pokemon por tipo\n//   };\n  \n  \n//   //Filtrado por Ataque\n//   const handlerFilterAtack = (event) => {\n//     event.preventDefault()\n//     const { value } = event.target;\n//     if (value === \"All\") {\n//       dispatch(getPokemon());\n//     } else {\n//       dispatch(filterByAttack(value));\n//     }\n//   }\n  \n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }\n//   }\n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n\n//   const nextHandler = () => {\n//     // verificamos si estamos en la última pagina, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleClick={handleClick} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">Order</option>\n//         <option value=\"AA\">A-Z</option>\n//         <option value=\"ZA\">Z-A</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} >\n//         <option  value=\"All\">Types</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOriginFilter(event)}>\n//               <option value=\"All\">Created</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} name='attack' onChange={handlerFilterAtack} handleClearFilters={handleClearFilters}>\n//         <option value=\"All\">Attack</option>\n//         <option value=\"ascending\">Ascending (A-Z)</option>\n//         <option value=\"descending\">Descending (Z-A)</option>\n//       </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\nimport React, { useEffect, useState } from 'react';\nimport NavBar from '../../Components/NavBar/NavBar';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  filterByAttack,\n  filterByOrigin,\n  filterByType,\n  getPokemon,\n  getPokemonByName,\n  getTypes,\n  orderByName,\n} from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const allPokemons = useSelector((state) => state.allPokemons);\n  const allTypes = useSelector((state) => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n  const [filters, setFilters] = useState({\n    type: 'All',\n    origin: 'All',\n    order: 'All',\n  });\n\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  function handleClick (event){\n    event.preventDefault()\n    dispatch(getPokemon())\n  }\n\n  function handleChange(event) {\n    event.preventDefault()\n    setSearchPokemon(event.target.value)\n  }\n\n  function handleSubmit(event){\n    event.preventDefault();\n    if (searchPokemon) {\n      dispatch(getPokemonByName(searchPokemon));\n    } else {\n      dispatch(getPokemon());\n    }\n  }\n  function handleClearSearch() {\n    setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n    dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n  }\n\n  useEffect(() => {\n    // Apply filters when filters or data change\n    const { type, origin, order } = filters;\n    let filteredPokemons = [...allPokemons];\n\n    if (type !== 'All') {\n      filteredPokemons = filteredPokemons.filter((pokemon) =>\n        pokemon.types.includes(type)\n      );\n    }\n\n    if (origin !== 'All') {\n      filteredPokemons = filteredPokemons.filter((pokemon) => {\n        return origin === 'created' ? pokemon.createdInDb : !pokemon.createdInDb;\n      });\n    }\n\n    if (order === 'AA') {\n      filteredPokemons.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (order === 'ZA') {\n      filteredPokemons.sort((a, b) => b.name.localeCompare(a.name));\n    }\n\n    dispatch(getPokemonByName(searchPokemon, filteredPokemons));\n  }, [filters, allPokemons, searchPokemon, dispatch]);\n\n  function handleChange(event) {\n    setSearchPokemon(event.target.value);\n  }\n\n  const clearFilters = () => {\n    setSearchPokemon('');\n    setFilters({ type: 'All', origin: 'All', order: 'All' });\n    dispatch(getPokemon());\n  };\n  const [currentPage, setCurrentPage] = useState(1);\n    const [pokemonsPerPage] = useState(12);\n  \n    const indexOfLastPokemon = currentPage * pokemonsPerPage;\n    const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n    const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  \n    useEffect(()=>{\n      if(currentPokemons.length === 0) setCurrentPage(1);\n    },[currentPokemons])\n  \n  \n    const nextHandler = () => {\n      // verificamos si estamos en la última pagina, para no avanzar mas\n      if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n        return;\n      }\n      if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n      setCurrentPage(currentPage + 1);\n    }\n  \n    const prevHandler = () => {\n      if (currentPage === 0) return;\n      setCurrentPage(currentPage - 1);\n    }\n\n  return (\n    <div>\n       <div>\n         <NavBar handleChange={handleChange} handleClick={handleClick} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n       </div>\n      <select\n        onChange={(e) => setFilters({ ...filters, order: e.target.value })}\n        value={filters.order}\n      >\n        <option value=\"All\">Order</option>\n        <option value=\"AA\">A-Z</option>\n        <option value=\"ZA\">Z-A</option>\n      </select>\n\n      <select\n        onChange={(e) => setFilters({ ...filters, type: e.target.value })}\n        value={filters.type}\n      >\n        <option value=\"All\">Types</option>\n        {allTypes?.map((tipo) => (\n          <option key={tipo} value={tipo}>\n            {tipo}\n          </option>\n        ))}\n      </select>\n\n      <select\n        onChange={(e) => setFilters({ ...filters, origin: e.target.value })}\n        value={filters.origin}\n      >\n        <option value=\"All\">Created</option>\n        <option value=\"created\">DB</option>\n        <option value=\"api\">API</option>\n      </select>\n\n      <input type=\"text\" value={searchPokemon} onChange={handleChange} />\n\n      <button onClick={clearFilters}>Clear Filters</button>\n\n      <Cards allPokemons={allPokemons} />\n           <div className={styles.pagination_container}>\n       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n       <button className={styles.pagination_button} >{currentPage}</button>\n       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n     </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,gCAAgC;AACnD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,cAAc,EACdC,cAAc,EACdC,YAAY,EACZC,UAAU,EACVC,gBAAgB,EAChBC,QAAQ,EACRC,WAAW,QACN,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAC9B,MAAMe,WAAW,GAAGd,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAME,QAAQ,GAAGhB,WAAW,CAAEe,KAAK,IAAKA,KAAK,CAACC,QAAQ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"},"metadata":{},"sourceType":"module","externalDependencies":[]}