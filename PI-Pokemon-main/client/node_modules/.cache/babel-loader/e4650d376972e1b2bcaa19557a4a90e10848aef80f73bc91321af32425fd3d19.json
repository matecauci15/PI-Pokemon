{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\nimport NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\nimport './HomePage.css';\nimport getColorForType from '../../utils/colors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemon } from '../../Redux/actions';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  console.log(allPokemons);\n\n  // const [pokemons, setPokemons] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  // const [pokemonDetails, setPokemonDetails] = useState({});\n\n  useEffect(() => {\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n  //       setPokemons(data.results);\n\n  //       const detailsPromises = data.results.map(async (pokemon) => {\n  //         const { data: details } = await axios.get(pokemon.url);\n  //         return { [pokemon.name]: details };\n  //       });\n\n  //       const pokemonDetailsData = await Promise.all(detailsPromises);\n\n  //       const detailsObject = Object.assign({}, ...pokemonDetailsData);\n  //       setPokemonDetails(detailsObject);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  // }, []);\n\n  // const getPokemonImageURL = (pokemon) => {\n  //   const pokemonId = allPokemons.url.split('/').filter(Boolean).pop();\n  //   return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  // };\n\n  const paginate = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home_general\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title_landing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home_cards\",\n        children: [currentPokemons.map(pokemon => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"article\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/${pokemon.name}`,\n            className: \"detail_links\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"pokemon_image\"\n              // src={getPokemonImageURL(pokemon)}\n              ,\n              src: allPokemons.url,\n              alt: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: pokemon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this), allPokemons[pokemon.name] && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: allPokemons[pokemon.name].types.map(type => /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"types\",\n                style: {\n                  backgroundColor: getColorForType(type.type.name)\n                },\n                children: type.type.name\n              }, type.type.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, pokemon.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-container\",\n          children: Array.from({\n            length: Math.ceil(allPokemons.length / pokemonsPerPage)\n          }).map((_, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => paginate(index + 1),\n            className: `pagination-button ${index + 1 === currentPage ? \"active\" : \"\"}`,\n            children: index + 1\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(HomePage, \"0JmwM32Srr+UXvexB+k3pVYPnEU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = HomePage;\nexport default HomePage;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","Link","React","useState","useEffect","getColorForType","useDispatch","useSelector","getPokemon","jsxDEV","_jsxDEV","HomePage","_s","dispatch","allPokemons","state","console","log","currentPage","setCurrentPage","pokemonsPerPage","paginate","pageNumber","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","pokemon","to","name","src","url","alt","types","type","style","backgroundColor","Array","from","length","Math","ceil","_","index","onClick","_c","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/Components/HomePage/homePage.jsx"],"sourcesContent":["import NavBar from '../NavBar/NavBar';\nimport { Link } from 'react-router-dom';\nimport React, { useState, useEffect } from 'react';\n// import axios from 'axios';\nimport './HomePage.css';\nimport getColorForType from '../../utils/colors'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getPokemon } from '../../Redux/actions';\n// import Footer from '../Footer/Footer';\n\n// const URL = \"https://pokeapi.co/api/v2/pokemon?limit=200\";\n\nconst HomePage = () => {\n  const dispatch = useDispatch()\n  const allPokemons = useSelector(state => state.allPokemons)\n  console.log(allPokemons);\n\n  // const [pokemons, setPokemons] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonsPerPage] = useState(12);\n  // const [pokemonDetails, setPokemonDetails] = useState({});\n\n  useEffect(() => {\n    dispatch(getPokemon())\n  },[dispatch])\n\n  // useEffect(() => {\n  //   const fetchPokemons = async () => {\n  //     try {\n  //       const { data } = await axios.get(`${URL}`);\n  //       setPokemons(data.results);\n\n  //       const detailsPromises = data.results.map(async (pokemon) => {\n  //         const { data: details } = await axios.get(pokemon.url);\n  //         return { [pokemon.name]: details };\n  //       });\n\n  //       const pokemonDetailsData = await Promise.all(detailsPromises);\n\n  //       const detailsObject = Object.assign({}, ...pokemonDetailsData);\n  //       setPokemonDetails(detailsObject);\n  //     } catch (error) {\n  //       console.error(\"Error fetching pokemons:\", error);\n  //     }\n  //   };\n  //   fetchPokemons();\n  // }, []);\n\n  // const getPokemonImageURL = (pokemon) => {\n  //   const pokemonId = allPokemons.url.split('/').filter(Boolean).pop();\n  //   return `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${pokemonId}.png`;\n  // };\n\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber);\n  };\n\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n  return (\n    <div>\n      <NavBar />\n      <div className=\"home_general\">\n        <div className=\"title_landing\"></div>\n        <div className=\"home_cards\">\n          {currentPokemons.map((pokemon) => (\n            <div className=\"article\" key={pokemon.name}>\n              <Link to={`/${pokemon.name}`} className=\"detail_links\">\n                <img\n                  className=\"pokemon_image\"\n                  // src={getPokemonImageURL(pokemon)}\n                  src={allPokemons.url}\n                  alt={pokemon.name}\n                />\n                <h2>{pokemon.name}</h2>\n                {allPokemons[pokemon.name] && (\n                  <p>\n                    {\n                    allPokemons[pokemon.name].types.map((type) => (\n                    <span className='types' key={type.type.name} style={{ backgroundColor: getColorForType(type.type.name) }}>\n                      {type.type.name}\n                    </span>\n                  ))\n                  }\n                  </p>\n                )}\n              </Link>\n            </div>\n          ))}\n          <div className=\"pagination-container\">\n            {Array.from({\n              length: Math.ceil(allPokemons.length / pokemonsPerPage),\n            }).map((_, index) => (\n              <button\n                key={index}\n                onClick={() => paginate(index + 1)}\n                className={`pagination-button ${\n                  index + 1 === currentPage ? \"active\" : \"\"\n                }`}\n              >\n                {index + 1}\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}