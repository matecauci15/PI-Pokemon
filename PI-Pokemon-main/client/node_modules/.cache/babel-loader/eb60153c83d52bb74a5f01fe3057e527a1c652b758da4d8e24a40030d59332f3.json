{"ast":null,"code":"var _jsxFileName = \"/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx\",\n  _s = $RefreshSig$();\n// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// import styles from './HomePage.module.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByAttack, filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import getColorForType from '../../utils/colors'\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   // const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de pokemon ordenada\n\n//   const allTypes = useSelector(state => state.allTypes)\n\n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n\n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n\n//   function handleClick (event){\n//     event.preventDefault()\n//     dispatch(getPokemon())\n//   }\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n//     dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n//   }\n\n//   // funcion para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const {value} = event.target; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(value)); // llama a la accion para ordenar los pokemons\n//   };\n\n//   // filtrado por Origen\n//   const handleOriginFilter = (event)=>{\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByOrigin(value))\n// }\n\n//   // Filtrado por TYPE\n//   const handleTypeChange = (event) => {\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByType(value)); // llama a la accion para filtrar los pokemon por tipo\n//   };\n\n//   //Filtrado por Ataque\n//   const handlerFilterAtack = (event) => {\n//     event.preventDefault()\n//     const { value } = event.target;\n//     if (value === \"All\") {\n//       dispatch(getPokemon());\n//     } else {\n//       dispatch(filterByAttack(value));\n//     }\n//   }\n\n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }\n//   }\n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n//   const nextHandler = () => {\n//     // verificamos si estamos en la última pagina, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleClick={handleClick} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">Order</option>\n//         <option value=\"AA\">A-Z</option>\n//         <option value=\"ZA\">Z-A</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} >\n//         <option  value=\"All\">Types</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOriginFilter(event)}>\n//               <option value=\"All\">Created</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} name='attack' onChange={handlerFilterAtack} handleClearFilters={handleClearFilters}>\n//         <option value=\"All\">Attack</option>\n//         <option value=\"ascending\">Ascending (A-Z)</option>\n//         <option value=\"descending\">Descending (Z-A)</option>\n//       </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\n\nimport NavBar from '../../Components/NavBar/NavBar';\nimport React, { useEffect, useState } from 'react';\nimport styles from './HomePage.module.css'; // Asegúrate de importar tus estilos\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterByAttack,\n// filterByOrigin,\n// filterByType,\ngetPokemon, getPokemonByName, getTypes\n// orderByName,\n} from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HomePage = () => {\n  _s();\n  const dispatch = useDispatch();\n  const allPokemons = useSelector(state => state.allPokemons);\n  const allTypes = useSelector(state => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n  const [filters, setFilters] = useState({\n    type: 'All',\n    origin: 'All',\n    order: 'All'\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const pokemonsPerPage = 12;\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n  useEffect(() => {\n    // Apply filters when filters or data change\n    const {\n      type,\n      origin,\n      order\n    } = filters;\n    let filteredPokemons = [...allPokemons];\n    if (type !== 'All') {\n      filteredPokemons = filteredPokemons.filter(pokemon => pokemon.types.includes(type));\n    }\n    if (origin !== 'All') {\n      filteredPokemons = filteredPokemons.filter(pokemon => {\n        return origin === 'created' ? pokemon.createdInDb : !pokemon.createdInDb;\n      });\n    }\n    if (order === 'AA') {\n      filteredPokemons.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (order === 'ZA') {\n      filteredPokemons.sort((a, b) => b.name.localeCompare(a.name));\n    }\n    dispatch(getPokemonByName(searchPokemon, filteredPokemons));\n  }, [filters, allPokemons, searchPokemon, dispatch]);\n  function handleChange(event) {\n    setSearchPokemon(event.target.value);\n  }\n  const clearFilters = () => {\n    setSearchPokemon('');\n    setFilters({\n      type: 'All',\n      origin: 'All',\n      order: 'All'\n    });\n    dispatch(getPokemon());\n  };\n  const handleOrderChange = event => {\n    setFilters({\n      ...filters,\n      order: event.target.value\n    });\n  };\n  const handleTypeChange = event => {\n    setFilters({\n      ...filters,\n      type: event.target.value\n    });\n  };\n  const handleOriginFilter = event => {\n    setFilters({\n      ...filters,\n      origin: event.target.value\n    });\n  };\n  const handlerFilterAtack = event => {\n    const value = event.target.value;\n    if (value === 'All') {\n      setFilters({\n        ...filters,\n        order: 'All'\n      });\n    } else {\n      dispatch(filterByAttack(value));\n    }\n  };\n\n  // Implementa tus propios métodos y componentes de paginado aquí\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n  const nextHandler = () => {\n    if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n      return;\n    }\n    if (indexOfFirstPokemon >= allPokemons.length) return;\n    setCurrentPage(currentPage + 1);\n  };\n  const prevHandler = () => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        handleChange: handleChange,\n        handleClearFilters: clearFilters,\n        filters: filters,\n        handleOrderChange: handleOrderChange,\n        handleTypeChange: handleTypeChange,\n        handleOriginFilter: handleOriginFilter,\n        handlerFilterAtack: handlerFilterAtack,\n        searchPokemon: searchPokemon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleOrderChange,\n          value: filters.order,\n          className: styles.filter_types,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"AA\",\n            children: \"A-Z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ZA\",\n            children: \"Z-A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleTypeChange,\n          value: filters.type,\n          className: styles.filter_types,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Types\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 11\n          }, this), allTypes === null || allTypes === void 0 ? void 0 : allTypes.map(tipo => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: tipo,\n            children: tipo\n          }, tipo, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handleOriginFilter,\n          value: filters.origin,\n          className: styles.filter_types,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Created\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"created\",\n            children: \"DB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"api\",\n            children: \"API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: searchPokemon,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearFilters,\n          children: \"Clear Filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: handlerFilterAtack,\n          value: filters.order,\n          className: styles.filter_types,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"All\",\n            children: \"Attack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"ascending\",\n            children: \"Ascending (A-Z)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"descending\",\n            children: \"Descending (Z-A)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.home_cards,\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        allPokemons: currentPokemons\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.pagination_container,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: prevHandler,\n        disabled: currentPage === 1,\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        children: currentPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.pagination_button,\n        onClick: nextHandler,\n        disabled: indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(HomePage, \"w6acZ7vemGIt2DWc8hFwERli5Kg=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = HomePage;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"names":["NavBar","React","useEffect","useState","styles","useDispatch","useSelector","filterByAttack","getPokemon","getPokemonByName","getTypes","Cards","jsxDEV","_jsxDEV","Fragment","_Fragment","HomePage","_s","dispatch","allPokemons","state","allTypes","searchPokemon","setSearchPokemon","filters","setFilters","type","origin","order","currentPage","setCurrentPage","pokemonsPerPage","filteredPokemons","filter","pokemon","types","includes","createdInDb","sort","a","b","name","localeCompare","handleChange","event","target","value","clearFilters","handleOrderChange","handleTypeChange","handleOriginFilter","handlerFilterAtack","indexOfLastPokemon","indexOfFirstPokemon","currentPokemons","slice","nextHandler","length","prevHandler","children","handleClearFilters","fileName","_jsxFileName","lineNumber","columnNumber","onChange","className","filter_types","map","tipo","onClick","home_cards","pagination_container","pagination_button","disabled","_c","Home","$RefreshReg$"],"sources":["/Users/mateocaucino/PI-Pokemon/PI-Pokemon/PI-Pokemon-main/client/src/views/HomePage/homePage.jsx"],"sourcesContent":["// import NavBar from '../../Components/NavBar/NavBar';\n// import React, {useEffect, useState } from 'react';\n// import styles from './HomePage.module.css';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { filterByAttack, filterByOrigin, filterByType, getPokemon, getPokemonByName, getTypes, orderByName } from '../../Redux/actions';\n// import Cards from '../../Components/Cards/Cards';\n// // import getColorForType from '../../utils/colors'\n// // import Footer from '../Footer/Footer';\n\n// const HomePage = () => {\n//   const dispatch = useDispatch()\n//   // global state = component subscribed to global state\n//   const allPokemons = useSelector(state => state.allPokemons)\n//   // const pokemonsCopy = useSelector((state) => state.pokemonsCopy); //  copia lista de pokemon ordenada\n  \n//   const allTypes = useSelector(state => state.allTypes)\n  \n//   const [searchPokemon, setSearchPokemon] = useState(\"\")\n  \n//   useEffect(() => {\n//     // when page render will send the action and modify the state\n//     dispatch(getTypes());\n//     dispatch(getPokemon())\n//   },[dispatch])\n  \n//   function handleClick (event){\n//     event.preventDefault()\n//     dispatch(getPokemon())\n//   }\n\n//   function handleChange(event) {\n//     event.preventDefault()\n//     setSearchPokemon(event.target.value)\n//   }\n\n//   function handleSubmit(event){\n//     event.preventDefault();\n//     if (searchPokemon) {\n//       dispatch(getPokemonByName(searchPokemon));\n//     } else {\n//       dispatch(getPokemon());\n//     }\n//   }\n//   function handleClearSearch() {\n//     setSearchPokemon(\"\"); // establece el valor de busqueda en una cadena vacia\n//     dispatch(getPokemon(allPokemons)); // muestra todos los pokemon\n//   }\n\n  \n//   // funcion para manejar el cambio de ORDEN A-Z Z-A\n//   const handleOrderChange = (event) => {\n//     event.preventDefault();\n//     const {value} = event.target; // 'AA' para ascendente, 'ZA' para descendente\n//     dispatch(orderByName(value)); // llama a la accion para ordenar los pokemons\n//   };\n  \n//   // filtrado por Origen\n//   const handleOriginFilter = (event)=>{\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByOrigin(value))\n// }\n  \n//   // Filtrado por TYPE\n//   const handleTypeChange = (event) => {\n//     event.preventDefault()\n//     const {value} = event.target;\n//     dispatch(filterByType(value)); // llama a la accion para filtrar los pokemon por tipo\n//   };\n  \n  \n//   //Filtrado por Ataque\n//   const handlerFilterAtack = (event) => {\n//     event.preventDefault()\n//     const { value } = event.target;\n//     if (value === \"All\") {\n//       dispatch(getPokemon());\n//     } else {\n//       dispatch(filterByAttack(value));\n//     }\n//   }\n  \n//   const handleClearFilters = (event) => {\n//     if(event.target.value === \"All\"){\n//       dispatch(getPokemon())\n//     }\n//   }\n//   // Paginado\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [pokemonsPerPage] = useState(12);\n\n//   const indexOfLastPokemon = currentPage * pokemonsPerPage;\n//   const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n//   const currentPokemons = allPokemons.slice(indexOfFirstPokemon, indexOfLastPokemon);\n\n//   useEffect(()=>{\n//     if(currentPokemons.length === 0) setCurrentPage(1);\n//   },[currentPokemons])\n\n\n//   const nextHandler = () => {\n//     // verificamos si estamos en la última pagina, para no avanzar mas\n//     if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n//       return;\n//     }\n//     if (indexOfFirstPokemon >= allPokemons.length) return; // validacion para detenerse\n//     setCurrentPage(currentPage + 1);\n//   }\n\n//   const prevHandler = () => {\n//     if (currentPage === 0) return;\n//     setCurrentPage(currentPage - 1);\n//   }\n\n//   return (\n//     <>\n//       <div>\n//       <NavBar handleChange={handleChange} handleClick={handleClick} handleSubmit={handleSubmit} handleClearSearch={handleClearSearch}/>\n//       </div>\n\n//       <div className={styles.filters}>\n//       <div>\n//       <select className={styles.filter_types} onChange={handleOrderChange} name='order'  handleClearFilters={handleClearFilters}>\n//       <option value=\"All\">Order</option>\n//         <option value=\"AA\">A-Z</option>\n//         <option value=\"ZA\">Z-A</option>\n//       </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} onChange={handleTypeChange} name='types'  handleClearFilters={handleClearFilters} >\n//         <option  value=\"All\">Types</option>\n//         {allTypes?.map(tipo => <option key={tipo} value={tipo}>{tipo}</option>)}   \n//       </select>\n//     </div>\n//     <div >\n//           <select className={styles.filter_types} name=\"origen\"  handleClearFilters={handleClearFilters} onChange={(event) => handleOriginFilter(event)}>\n//               <option value=\"All\">Created</option>\n//               <option value=\"created\">DB</option>\n//               <option value=\"api\">API</option>\n//           </select>\n//     </div>\n//     <div>\n//       <select className={styles.filter_types} name='attack' onChange={handlerFilterAtack} handleClearFilters={handleClearFilters}>\n//         <option value=\"All\">Attack</option>\n//         <option value=\"ascending\">Ascending (A-Z)</option>\n//         <option value=\"descending\">Descending (Z-A)</option>\n//       </select>\n//     </div>\n//       </div>\n\n//     <div className={styles.home_cards}> \n//         <Cards allPokemons={currentPokemons} />\n//     </div>\n//     <div className={styles.pagination_container}>\n//       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n//       <button className={styles.pagination_button} >{currentPage}</button>\n//       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n//     </div>\n//     </>\n//   );\n// };\n\n// export default HomePage;\n\nimport NavBar from '../../Components/NavBar/NavBar';\nimport React, { useEffect, useState } from 'react';\nimport styles from './HomePage.module.css'; // Asegúrate de importar tus estilos\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  filterByAttack,\n  // filterByOrigin,\n  // filterByType,\n  getPokemon,\n  getPokemonByName,\n  getTypes,\n  // orderByName,\n} from '../../Redux/actions';\nimport Cards from '../../Components/Cards/Cards';\n\nconst HomePage = () => {\n  const dispatch = useDispatch();\n  const allPokemons = useSelector((state) => state.allPokemons);\n  const allTypes = useSelector((state) => state.allTypes);\n  const [searchPokemon, setSearchPokemon] = useState('');\n  const [filters, setFilters] = useState({\n    type: 'All',\n    origin: 'All',\n    order: 'All',\n  });\n  const [currentPage, setCurrentPage] = useState(1);\n  const pokemonsPerPage = 12;\n\n  useEffect(() => {\n    dispatch(getTypes());\n    dispatch(getPokemon());\n  }, [dispatch]);\n\n  useEffect(() => {\n    // Apply filters when filters or data change\n    const { type, origin, order } = filters;\n    let filteredPokemons = [...allPokemons];\n\n    if (type !== 'All') {\n      filteredPokemons = filteredPokemons.filter((pokemon) =>\n        pokemon.types.includes(type)\n      );\n    }\n\n    if (origin !== 'All') {\n      filteredPokemons = filteredPokemons.filter((pokemon) => {\n        return origin === 'created' ? pokemon.createdInDb : !pokemon.createdInDb;\n      });\n    }\n\n    if (order === 'AA') {\n      filteredPokemons.sort((a, b) => a.name.localeCompare(b.name));\n    } else if (order === 'ZA') {\n      filteredPokemons.sort((a, b) => b.name.localeCompare(a.name));\n    }\n\n    dispatch(getPokemonByName(searchPokemon, filteredPokemons));\n  }, [filters, allPokemons, searchPokemon, dispatch]);\n\n  function handleChange(event) {\n    setSearchPokemon(event.target.value);\n  }\n\n  const clearFilters = () => {\n    setSearchPokemon('');\n    setFilters({ type: 'All', origin: 'All', order: 'All' });\n    dispatch(getPokemon());\n  };\n\n  const handleOrderChange = (event) => {\n    setFilters({ ...filters, order: event.target.value });\n  };\n\n  const handleTypeChange = (event) => {\n    setFilters({ ...filters, type: event.target.value });\n  };\n\n  const handleOriginFilter = (event) => {\n    setFilters({ ...filters, origin: event.target.value });\n  };\n\n  const handlerFilterAtack = (event) => {\n    const value = event.target.value;\n    if (value === 'All') {\n      setFilters({ ...filters, order: 'All' });\n    } else {\n      dispatch(filterByAttack(value));\n    }\n  };\n\n  // Implementa tus propios métodos y componentes de paginado aquí\n  const indexOfLastPokemon = currentPage * pokemonsPerPage;\n  const indexOfFirstPokemon = indexOfLastPokemon - pokemonsPerPage;\n  const currentPokemons = allPokemons.slice(\n    indexOfFirstPokemon,\n    indexOfLastPokemon\n  );\n\n  const nextHandler = () => {\n    if (indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length) {\n      return;\n    }\n    if (indexOfFirstPokemon >= allPokemons.length) return;\n    setCurrentPage(currentPage + 1);\n  };\n\n  const prevHandler = () => {\n    if (currentPage === 0) return;\n    setCurrentPage(currentPage - 1);\n  };\n\n  return (\n    <>\n    <div>\n      <NavBar\n        handleChange={handleChange}\n        handleClearFilters={clearFilters}\n        filters={filters}\n        handleOrderChange={handleOrderChange}\n        handleTypeChange={handleTypeChange}\n        handleOriginFilter={handleOriginFilter}\n        handlerFilterAtack={handlerFilterAtack}\n        searchPokemon={searchPokemon}\n        />\n      <div>\n        <select onChange={handleOrderChange} value={filters.order} className={styles.filter_types}>\n          <option value=\"All\">Order</option>\n          <option value=\"AA\">A-Z</option>\n          <option value=\"ZA\">Z-A</option>\n        </select>\n\n        <select onChange={handleTypeChange} value={filters.type} className={styles.filter_types}>\n          <option value=\"All\">Types</option>\n          {allTypes?.map((tipo) => (\n            <option key={tipo} value={tipo}>\n              {tipo}\n            </option>\n          ))}\n        </select>\n\n        <select onChange={handleOriginFilter} value={filters.origin} className={styles.filter_types}>\n          <option value=\"All\">Created</option>\n          <option value=\"created\">DB</option>\n          <option value=\"api\">API</option>\n        </select>\n\n        <input type=\"text\" value={searchPokemon} onChange={handleChange} />\n        <button onClick={clearFilters}>Clear Filters</button>\n\n        <select\n          onChange={handlerFilterAtack}\n          value={filters.order}\n          className={styles.filter_types}\n          >\n          <option value=\"All\">Attack</option>\n          <option value=\"ascending\">Ascending (A-Z)</option>\n          <option value=\"descending\">Descending (Z-A)</option>\n        </select>\n        </div>\n       </div>\n\n     <div className={styles.home_cards}> \n         <Cards allPokemons={currentPokemons} />\n     </div>\n     <div className={styles.pagination_container}>\n       <button className={styles.pagination_button} onClick={prevHandler}  disabled={currentPage === 1}>Prev</button>\n       <button className={styles.pagination_button} >{currentPage}</button>\n       <button className={styles.pagination_button} onClick={nextHandler} disabled={indexOfFirstPokemon + pokemonsPerPage >= allPokemons.length}>Next</button>\n     </div>\n          </>\n)}\n\nexport default Home"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,MAAM,MAAM,gCAAgC;AACnD,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,uBAAuB,CAAC,CAAC;AAC5C,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SACEC,cAAc;AACd;AACA;AACAC,UAAU,EACVC,gBAAgB,EAChBC;AACA;AAAA,OACK,qBAAqB;AAC5B,OAAOC,KAAK,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEjD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,MAAMc,WAAW,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACD,WAAW,CAAC;EAC7D,MAAME,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"},"metadata":{},"sourceType":"module","externalDependencies":[]}